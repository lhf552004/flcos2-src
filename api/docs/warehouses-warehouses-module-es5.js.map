{"version":3,"sources":["webpack:///src/app/warehouses/logistic-unit-wrapper/logistic-unit-wrapper.component.ts","webpack:///src/app/warehouses/logistic-unit-wrapper/logistic-unit-wrapper.component.html","webpack:///src/app/warehouses/logistic-unit/logistic-unit.component.ts","webpack:///src/app/warehouses/logistic-unit/logistic-unit.component.html","webpack:///src/app/warehouses/route-resolvers/logistic-unit-resolver.service.ts","webpack:///src/app/warehouses/route-resolvers/logistic-units-resolver.service.ts","webpack:///src/app/warehouses/route-resolvers/warehouse-resolver.service.ts","webpack:///src/app/warehouses/route-resolvers/warehouses-resolver.service.ts","webpack:///src/app/warehouses/shared/warehouse.service.ts","webpack:///src/app/warehouses/warehouse-default/warehouse-default.component.ts","webpack:///src/app/warehouses/warehouse-default/warehouse-default.component.html","webpack:///src/app/warehouses/warehouse/warehouse.component.ts","webpack:///src/app/warehouses/warehouse/warehouse.component.html","webpack:///src/app/warehouses/warehouses-routing.module.ts","webpack:///src/app/warehouses/warehouses.module.ts","webpack:///src/app/warehouses/warehouses/warehouses.component.ts","webpack:///src/app/warehouses/warehouses/warehouses.component.html"],"names":["LogisticUnitWrapperComponent","selector","templateUrl","styleUrls","LogisticUnitComponent","route","faEllipsisV","types","isAuthor","isOwner","unsubscribe","data","pipe","subscribe","logisticUnit","next","complete","close","$event","nameChanged","typeSelected","LogisticUnitResolverService","warehouseService","router","state","id","paramMap","get","console","log","getLogiticUnit","providedIn","LogisticUnitsResolverService","getLogisticUnits","WarehouseResolverService","getWarehouse","WarehousesResolverService","getWarehouses","WarehouseService","warehouses","name","logisticUnits","type","batchNumber","weight","unit","quantity","warehouseId","warehouseName","find","w","filter","l","WarehouseDefaultComponent","WarehouseComponent","warehouse","routes","path","component","resolve","children","WarehousesRoutingModule","forChild","imports","exports","WarehousesModule","declarations","WarehousesComponent","menuItems","map","icon","label"],"mappings":"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","file":"warehouses-warehouses-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'emes-logistic-unit-wrapper',\n  templateUrl: './logistic-unit-wrapper.component.html',\n  styleUrls: ['./logistic-unit-wrapper.component.scss']\n})\nexport class LogisticUnitWrapperComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { faEllipsisV, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LogisticUnit } from '../shared/models/logistic-unit.model';\nimport { Warehouse } from '../shared/models/warehouse.model';\n\n@Component({\n  selector: 'emes-logistic-unit',\n  templateUrl: './logistic-unit.component.html',\n  styleUrls: ['./logistic-unit.component.scss']\n})\nexport class LogisticUnitComponent implements OnInit {\n  // Icon\n  faEllipsisV: IconDefinition = faEllipsisV;\n\n  logisticUnit: LogisticUnit;\n\n  // Product type\n  types: any[] = ['Bag', 'trolly', 'Backet'];\n  // Selected type\n  selectedType: any;\n\n  // Indicator whether it is a author\n  isAuthor: boolean = true;\n  // Indicator whether it is a owner\n  isOwner: boolean = true;\n  // Used for cleaning subscription \n  unsubscribe: Subject<void> = new Subject();\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe(data =>{\n      if(data.logisticUnit)\n        this.logisticUnit = data.logisticUnit;\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n  \n  save(close: boolean) {\n\n  }\n\n  close() {\n\n  }\n\n  copy() {\n\n  }\n\n  delete() {\n\n  }\n\n  typeSelected() {\n\n  }\n\n  nameChanged($event) {\n\n  }\n\n}\n","<div class=\"container-fluid d-flex flex-column\">\n    <div class=\"row justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <div class=\"col-auto\">\n            <h2>\n                Logistic Unit Management\n            </h2>\n        </div>\n\n        <div class=\"col-auto\">\n            <div class=\"btn-toolbar mb-2 mb-md-0\">\n\n                <div *ngIf=\"isAuthor\" class=\"btn-group mr-2\">\n                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"save(false)\">Save</button>\n                    <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\n                        <button class=\"btn btn-sm btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button ngbDropdownItem (click)=\"save(false)\">Save</button>\n                            <button ngbDropdownItem (click)=\"save(true)\">Save & Close</button>\n                        </div>\n                    </div>\n                </div>\n\n                <button type=\"button\" class=\"btn btn-sm btn-secondary mr-2\" (click)=\"close()\">Close</button>\n\n                <div class=\"btn-group mr-2\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" class=\"btn btn-sm btn-link dropdown-icon\" ngbDropdownToggle>\n                        <fa-icon class=\"text-primary pointer\" [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\n                    </button>\n                    <div class=\"dropdown-menu\" ngbDropdownMenu>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"save(true)\">Save</button>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"close()\">Save & Close</button>\n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"copy()\">Copy</button>\n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"delete()\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<form>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputId\">Id</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"logisticUnit.id\" disabled>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputName\">Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"inputName\" [(ngModel)]=\"logisticUnit.name\"\n                (input)=\"nameChanged($event.target.value)\" placeholder=\"Enter Name here\">\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputWarehouse\">Warehouse</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputWarehouse\" name=\"inputWarehouse\"\n                [(ngModel)]=\"logisticUnit.warehouseName\" disabled>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputBatchNumber\">Batch number</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputBatchNumber\" name=\"inputBatchNumber\"\n                [(ngModel)]=\"logisticUnit.batchNumber\" disabled>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"selectType\">Select Type</label>\n            <select [(ngModel)]=\"selectedType\" name=\"selectType\" class=\"form-control\" (ngModelChange)=\"typeSelected()\">\n                <option [ngValue]=\"undefined\">Please select a type</option>\n                <option [ngValue]=\"type\" *ngFor=\"let type of types\">\n                    {{ type }}\n                </option>\n            </select>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputType\">Type</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputType\" name=\"inputType\" [(ngModel)]=\"logisticUnit.type\"\n                disabled>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"numWeight\">Weight</label>\n            <input type=\"number\" class=\"form-control\" id=\"numWeight\" name=\"numWeight\" [(ngModel)]=\"logisticUnit.weight\">\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputUnit\">Unit</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputUnit\" name=\"inputUnit\" [(ngModel)]=\"logisticUnit.unit\"\n                (input)=\"nameChanged($event.target.value)\" placeholder=\"Enter Unit here\">\n        </div>\n    </div>\n</form>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LogisticUnit } from '../shared/models/logistic-unit.model';\nimport { WarehouseService } from '../shared/warehouse.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticUnitResolverService {\n\n  constructor(private warehouseService: WarehouseService, private router: Router) { }\n  \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<LogisticUnit> {\n    const id = route.paramMap.get('luId');\n    console.log(id)\n    return this.warehouseService.getLogiticUnit(id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LogisticUnit } from '../shared/models/logistic-unit.model';\nimport { WarehouseService } from '../shared/warehouse.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogisticUnitsResolverService {\n\n  constructor(private warehouseService: WarehouseService, private router: Router) { }\n  \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<LogisticUnit[]> {\n    const id = route.paramMap.get('warehouseId');\n    console.log(id)\n    return this.warehouseService.getLogisticUnits(id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LogisticUnit } from '../shared/models/logistic-unit.model';\nimport { Warehouse } from '../shared/models/warehouse.model';\nimport { WarehouseService } from '../shared/warehouse.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehouseResolverService {\n\n  constructor(private warehouseService: WarehouseService, private router: Router) { }\n  \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Warehouse> {\n    const id = route.paramMap.get('warehouseId');\n    console.log(id)\n    return this.warehouseService.getWarehouse(id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LogisticUnit } from '../shared/models/logistic-unit.model';\nimport { Warehouse } from '../shared/models/warehouse.model';\nimport { WarehouseService } from '../shared/warehouse.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehousesResolverService {\n\n  constructor(private warehouseService: WarehouseService, private router: Router) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Warehouse[]> {\n    return this.warehouseService.getWarehouses();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { LogisticUnit } from './models/logistic-unit.model';\nimport { Warehouse } from './models/warehouse.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehouseService {\n\n  warehouses: Warehouse[] = [\n    { id: 'b4b5191d-9162-4fbd-9836-a63f97b3b42a', name: 'Reception' },\n    { id: 'aaba2afb-c900-4ec2-bcc3-b14fbf180ea3', name: 'Dispensary' },\n    { id: 'ef76b752-9856-4653-9c8e-23281d715b79', name: 'Packing1' },\n    { id: '6301af5e-ff73-48a9-b703-c459120108bc', name: 'Packing2' },\n    { id: 'fd3d7c94-fc82-4b8a-b24f-2f337f87542a', name: 'Finished Product' }\n  ];\n\n  logisticUnits: LogisticUnit[] = [\n    { id: '5da156ae-5d8b-4bb6-b725-471e94744f26', type: 'bag', batchNumber: '20201001', weight: 100, unit: 'kg', quantity: 1, warehouseId: 'b4b5191d-9162-4fbd-9836-a63f97b3b42a', warehouseName: 'Reception' },\n    { id: '432cd2f4-b472-42fc-8488-6596498ca148', type: 'bag', batchNumber: '20201001', weight: 100, unit: 'kg', quantity: 1, warehouseId: 'b4b5191d-9162-4fbd-9836-a63f97b3b42a', warehouseName: 'Reception' },\n    { id: '192d875b-422b-466d-abeb-c83df17571f8', type: 'bag', batchNumber: '20201001', weight: 100, unit: 'kg', quantity: 1, warehouseId: 'b4b5191d-9162-4fbd-9836-a63f97b3b42a', warehouseName: 'Reception' },\n    { id: 'cca541e2-6cb6-47bd-838c-44073d948a0f', type: 'bag', batchNumber: '20201001', weight: 100, unit: 'kg', quantity: 1, warehouseId: 'b4b5191d-9162-4fbd-9836-a63f97b3b42a', warehouseName: 'Reception' },\n    { id: 'e294f883-1df5-481b-b665-0afe07c0d9a4', type: 'bag', batchNumber: '20201001', weight: 100, unit: 'kg', quantity: 1, warehouseId: 'b4b5191d-9162-4fbd-9836-a63f97b3b42a', warehouseName: 'Reception' },\n\n    { id: 'ce274acc-a151-4364-aabc-ad186021faf9', type: 'trolly', batchNumber: '20200930', weight: 3000, unit: 'kg', quantity: 30, warehouseId: 'b4b5191d-9162-4fbd-9836-a63f97b3b42a', warehouseName: 'Reception' },\n\n    { id: '446584cf-ee79-4d13-b509-f73d405fe9aa', type: 'bag', batchNumber: 'MIX1:000001', weight: 25, unit: 'kg', quantity: 1, warehouseId: 'fd3d7c94-fc82-4b8a-b24f-2f337f87542a', warehouseName: 'Finished Product' },\n    { id: '77024b71-9656-4023-a1e5-c45e47980416', type: 'bag', batchNumber: 'MIX1:000001', weight: 25, unit: 'kg', quantity: 1, warehouseId: 'fd3d7c94-fc82-4b8a-b24f-2f337f87542a', warehouseName: 'Finished Product' },\n    { id: '1ac069b2-f7b6-4604-a149-6dd7c1ac0bd6', type: 'bag', batchNumber: 'MIX1:000001', weight: 25, unit: 'kg', quantity: 1, warehouseId: 'fd3d7c94-fc82-4b8a-b24f-2f337f87542a', warehouseName: 'Finished Product' },\n    { id: 'c2e80e40-51ef-48dc-8e4e-3d8c7bca7ea7', type: 'bag', batchNumber: 'MIX1:000001', weight: 25, unit: 'kg', quantity: 1, warehouseId: 'fd3d7c94-fc82-4b8a-b24f-2f337f87542a', warehouseName: 'Finished Product' },\n    { id: '1ac0277c-95ad-4d5a-9bd3-535ddbfb5f0b', type: 'bag', batchNumber: 'MIX1:000001', weight: 25, unit: 'kg', quantity: 1, warehouseId: 'fd3d7c94-fc82-4b8a-b24f-2f337f87542a', warehouseName: 'Finished Product' },\n  ];\n\n  constructor() { }\n\n  getWarehouses(): Observable<Warehouse[]> {\n    return of(this.warehouses);\n  }\n\n  getWarehouse(id: string): Observable<Warehouse> {\n    return of(this.warehouses.find(w => w.id === id));\n  }\n\n  getLogisticUnits(warehouseId: string): Observable<LogisticUnit[]> {\n    return of(this.logisticUnits.filter(l => l.warehouseId === warehouseId));\n  }\n\n  getLogiticUnit(id: string): Observable<LogisticUnit> {\n    return of(this.logisticUnits.find(l => l.id === id));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'emes-warehouse-default',\n  templateUrl: './warehouse-default.component.html',\n  styleUrls: ['./warehouse-default.component.scss']\n})\nexport class WarehouseDefaultComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid d-flex flex-column flex-fill\">\n    <div class=\"row p-0 flex-fill align-items-center mt-5\">\n      <div class=\"col text-center\">Select a warehouse in the left hand side list</div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { faEllipsisV, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LogisticUnit } from '../shared/models/logistic-unit.model';\nimport { Warehouse } from '../shared/models/warehouse.model';\n\n@Component({\n  selector: 'emes-warehouse',\n  templateUrl: './warehouse.component.html',\n  styleUrls: ['./warehouse.component.scss']\n})\nexport class WarehouseComponent implements OnInit {\n  // Icon\n  faEllipsisV: IconDefinition = faEllipsisV;\n  \n  // Current warehouse\n  warehouse: Warehouse;\n  // Logistic units in the warehouse\n  logisticUnits: LogisticUnit[];\n\n  // Indicator whether it is a author\n  isAuthor: boolean = true;\n  // Indicator whether it is a owner\n  isOwner: boolean = true;\n\n  // Used for cleaning subscription \n  unsubscribe: Subject<void> = new Subject();\n\n  constructor(private route: ActivatedRoute) { }\n  ngOnInit(): void {\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe(data =>{\n      if(data.warehouse)\n        this.warehouse = data.warehouse;\n      console.log(this.warehouse)\n      if(data.logisticUnits){\n        this.logisticUnits = data.logisticUnits;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n  \n  save(close: boolean) {\n\n  }\n\n  close() {\n\n  }\n\n  copy() {\n\n  }\n\n  delete() {\n\n  }\n\n  typeSelected() {\n\n  }\n\n  nameChanged($event) {\n\n  }\n\n}\n","<div class=\"container-fluid d-flex flex-column\">\n    <div class=\"row justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <div class=\"col-auto\">\n            <h2>\n                Warehouse Management\n            </h2>\n        </div>\n\n        <div class=\"col-auto\">\n            <div class=\"btn-toolbar mb-2 mb-md-0\">\n                \n                <div *ngIf=\"isAuthor\" class=\"btn-group mr-2\">\n                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"save(false)\">Save</button>\n                    <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\n                        <button class=\"btn btn-sm btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button ngbDropdownItem (click)=\"save(false)\">Save</button>\n                            <button ngbDropdownItem (click)=\"save(true)\">Save & Close</button>\n                        </div>\n                    </div>\n                </div>\n\n                <button type=\"button\" class=\"btn btn-sm btn-secondary mr-2\" (click)=\"close()\">Close</button>\n\n                <div class=\"btn-group mr-2\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" class=\"btn btn-sm btn-link dropdown-icon\" ngbDropdownToggle>\n                        <fa-icon class=\"text-primary pointer\" [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\n                    </button>\n                    <div class=\"dropdown-menu\" ngbDropdownMenu>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"save(true)\">Save</button>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"close()\">Save & Close</button>\n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"copy()\">Copy</button>   \n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"delete()\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<form>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputId\">Id</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"warehouse.id\" disabled>\n      </div>\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputName\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"inputName\" [(ngModel)]=\"warehouse.name\" (input)=\"nameChanged($event.target.value)\" placeholder=\"Enter Name here\">\n      </div>\n    </div>\n</form>\n\n<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">Batch Number</th>\n        <th scope=\"col\">Type</th>\n        <th scope=\"col\">Weight</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let logisticUnit of logisticUnits; let i = index\">\n        <th scope=\"row\">{{i}}</th>\n        <td><a [routerLink]=\"['../logistic-units', logisticUnit.id]\">{{logisticUnit.id}}</a></td>\n        <td>{{logisticUnit.batchNumber}}</td>\n        <td>{{logisticUnit.type}}</td>\n        <td>{{logisticUnit.weight}}</td>\n      </tr>\n    </tbody>\n</table>\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LogisticUnitWrapperComponent } from './logistic-unit-wrapper/logistic-unit-wrapper.component';\r\nimport { LogisticUnitComponent } from './logistic-unit/logistic-unit.component';\r\nimport { LogisticUnitResolverService } from './route-resolvers/logistic-unit-resolver.service';\r\nimport { LogisticUnitsResolverService } from './route-resolvers/logistic-units-resolver.service';\r\nimport { WarehouseResolverService } from './route-resolvers/warehouse-resolver.service';\r\nimport { WarehousesResolverService } from './route-resolvers/warehouses-resolver.service';\r\nimport { WarehouseDefaultComponent } from './warehouse-default/warehouse-default.component';\r\nimport { WarehouseComponent } from './warehouse/warehouse.component';\r\nimport { WarehousesComponent } from './warehouses/warehouses.component';\r\n\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '', component: WarehousesComponent, resolve: { warehouses: WarehousesResolverService }, children: [\r\n    {\r\n      path: ':warehouseId', component: WarehouseComponent, resolve: { warehouse: WarehouseResolverService, logisticUnits: LogisticUnitsResolverService },\r\n    },\r\n    {\r\n      path: 'logistic-units', children: [\r\n        { path: ':luId', component: LogisticUnitComponent, resolve: { logisticUnit: LogisticUnitResolverService } }\r\n      ]\r\n    },\r\n    { path: '', component: WarehouseDefaultComponent }\r\n  ]\r\n}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class WarehousesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WarehousesComponent } from './warehouses/warehouses.component';\nimport { LogisticUnitComponent } from './logistic-unit/logistic-unit.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { WarehousesRoutingModule } from './warehouses-routing.module';\nimport { WarehouseComponent } from './warehouse/warehouse.component';\nimport { LogisticUnitWrapperComponent } from './logistic-unit-wrapper/logistic-unit-wrapper.component';\nimport { WarehouseDefaultComponent } from './warehouse-default/warehouse-default.component';\n\n\n\n@NgModule({\n  declarations: [WarehousesComponent, LogisticUnitComponent, WarehouseComponent, LogisticUnitWrapperComponent, WarehouseDefaultComponent],\n  imports: [\n    SharedModule,\n    WarehousesRoutingModule\n  ]\n})\nexport class WarehousesModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MenuItem } from 'src/app/shared/side-bar/model/menu-item.model';\r\nimport { Warehouse } from '../shared/models/warehouse.model';\r\n\r\n\r\n@Component({\r\n  selector: 'emes-warehouses',\r\n  templateUrl: './warehouses.component.html',\r\n  styleUrls: ['./warehouses.component.scss']\r\n})\r\nexport class WarehousesComponent implements OnInit {\r\n\r\n  menuItems: MenuItem[];\r\n\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe((data: {warehouses: Warehouse[]}) =>{\r\n      this.menuItems = data.warehouses.map(w => ({\r\n        id: w.id,\r\n        icon: faHome,\r\n        label: w.name,\r\n        route: [w.id],\r\n        children: []\r\n      }));\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n}\r\n","<div class=\"container-fluid h-100 px-0\">\n    <div class=\"row h-100 no-gutters\">\n        <emes-side-bar class=\"col-md-3 col-lg-2 d-none d-md-block bg-light\" [header]=\"'Warehouse'\" [menuItems]=\"menuItems\"></emes-side-bar>\n\n        <main class=\"col d-flex flex-column\">\n            <router-outlet></router-outlet>\n        </main>\n\n    </div>\n</div>"]}