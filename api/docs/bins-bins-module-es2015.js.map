{"version":3,"sources":["./src/app/bins/bin-default/bin-default.component.ts","./src/app/bins/bin-default/bin-default.component.html","./src/app/bins/bin/bin.component.ts","./src/app/bins/bin/bin.component.html","./src/app/bins/bins-routing.module.ts","./src/app/bins/bins.module.ts","./src/app/bins/bins/bins.component.ts","./src/app/bins/bins/bins.component.html","./src/app/bins/route-resolvers/bin-resolver.service.ts","./src/app/bins/route-resolvers/bins-resolver.service.ts","./src/app/bins/route-resolvers/products-resolver.service.ts","./src/app/bins/shared/product.service.ts"],"names":[],"mappings":"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","file":"bins-bins-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'emes-bin-default',\n  templateUrl: './bin-default.component.html',\n  styleUrls: ['./bin-default.component.scss']\n})\nexport class BinDefaultComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid d-flex flex-column flex-fill\">\n    <div class=\"row p-0 flex-fill align-items-center mt-5\">\n      <div class=\"col text-center\">Select a bin in the left hand side list</div>\n    </div>\n  </div>\n  ","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { faEllipsisV, faHome, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Bin } from '../shared/models/bin.model';\nimport { Product } from '../shared/models/product.model';\n\n@Component({\n  selector: 'emes-bin',\n  templateUrl: './bin.component.html',\n  styleUrls: ['./bin.component.scss']\n})\nexport class BinComponent implements OnInit, OnDestroy {\n\n  // Icon\n  faEllipsisV: IconDefinition = faEllipsisV;\n\n  // Current bin\n  bin: Bin;\n\n  // Product list\n  products: Product[];\n  // Selected product\n  selectedProduct: Product;\n\n  // Type list\n  types: string[] = ['bulk', 'bin'];\n  // Selected type\n  selectedType: string;\n\n  // Indicator whether it is a author\n  isAuthor: boolean = true;\n  // Indicator whether it is a owner\n  isOwner: boolean = true;\n\n  // Used for cleaning subscription \n  unsubscribe: Subject<void> = new Subject();\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    const observables: Observable<any>[] = [];\n\n    observables.push(this.route.parent.data.pipe(takeUntil(this.unsubscribe)));\n    observables.push(this.route.data.pipe(takeUntil(this.unsubscribe)));\n\n    combineLatest(observables).subscribe(x => {\n      this.products = x[0].products;\n      this.bin = x[1].bin;\n      console.log(x)\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  save(close: boolean) {\n\n  }\n\n  close() {\n\n  }\n\n  copy() {\n\n  }\n\n  delete() {\n\n  }\n\n  typeSelected() {\n\n  }\n\n  nameChanged($event) {\n\n  }\n\n  productSelected() {\n\n  }\n\n}\n","<div class=\"container-fluid d-flex flex-column\">\n    <div class=\"row justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <div class=\"col-auto\">\n            <h2>\n                Bin Management\n            </h2>\n        </div>\n\n        <div class=\"col-auto\">\n            <div class=\"btn-toolbar mb-2 mb-md-0\">\n\n                <div *ngIf=\"isAuthor\" class=\"btn-group mr-2\">\n                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"save(false)\">Save</button>\n                    <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\n                        <button class=\"btn btn-sm btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button ngbDropdownItem (click)=\"save(false)\">Save</button>\n                            <button ngbDropdownItem (click)=\"save(true)\">Save & Close</button>\n                        </div>\n                    </div>\n                </div>\n\n                <button type=\"button\" class=\"btn btn-sm btn-secondary mr-2\" (click)=\"close()\">Close</button>\n\n                <div class=\"btn-group mr-2\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" class=\"btn btn-sm btn-link dropdown-icon\" ngbDropdownToggle>\n                        <fa-icon class=\"text-primary pointer\" [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\n                    </button>\n                    <div class=\"dropdown-menu\" ngbDropdownMenu>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"save(true)\">Save</button>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"close()\">Save & Close</button>\n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"copy()\">Copy</button>\n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"delete()\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<form>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputId\">Id</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"bin.id\" disabled>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputName\">Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"inputName\" [(ngModel)]=\"bin.name\"\n                (input)=\"nameChanged($event.target.value)\" placeholder=\"Enter Name here\">\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"selectType\">Select Type</label>\n            <select [(ngModel)]=\"selectedType\" name=\"selectType\" class=\"form-control\" (ngModelChange)=\"typeSelected()\">\n                <option [ngValue]=\"undefined\">Please select a type</option>\n                <option [ngValue]=\"type\" *ngFor=\"let type of types\">\n                    {{ type }}\n                </option>\n            </select>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputType\">Type</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputType\" name=\"inputType\" [(ngModel)]=\"bin.type\" disabled>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"selectProduct\">Select Product</label>\n            <select [(ngModel)]=\"selectedProduct\" name=\"selectProduct\" class=\"form-control\" (ngModelChange)=\"productSelected()\">\n                <option [ngValue]=\"undefined\">Please select a Product</option>\n                <option [ngValue]=\"product.id\" *ngFor=\"let product of products\">\n                    {{ product.name }}\n                </option>\n            </select>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputProduct\">Product</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputProduct\" name=\"inputProduct\" [(ngModel)]=\"bin.productId\" disabled>\n        </div>\n    </div>\n</form>","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {BinDefaultComponent} from './bin-default/bin-default.component';\r\nimport {BinComponent} from './bin/bin.component';\r\nimport {BinsComponent} from './bins/bins.component';\r\nimport {BinResolverService} from './route-resolvers/bin-resolver.service';\r\nimport {BinsResolverService} from './route-resolvers/bins-resolver.service';\r\nimport {ProductsResolverService} from './route-resolvers/products-resolver.service';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '', component: BinsComponent, resolve: {bins: BinsResolverService, products: ProductsResolverService}, children: [\r\n    {path: ':binId', component: BinComponent, resolve: {bin: BinResolverService}},\r\n    {path: '', component: BinDefaultComponent}\r\n  ]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BinsRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BinsComponent } from './bins/bins.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { BinsRoutingModule } from './bins-routing.module';\nimport { BinComponent } from './bin/bin.component';\nimport { BinDefaultComponent } from './bin-default/bin-default.component';\n\n\n\n@NgModule({\n  declarations: [BinsComponent, BinComponent, BinDefaultComponent],\n  imports: [\n    SharedModule,\n    BinsRoutingModule\n  ]\n})\nexport class BinsModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MenuItem } from 'src/app/shared/side-bar/model/menu-item.model';\r\nimport { Bin } from '../shared/models/bin.model';\r\n\r\n@Component({\r\n  selector: 'emes-bins',\r\n  templateUrl: './bins.component.html',\r\n  styleUrls: ['./bins.component.scss']\r\n})\r\nexport class BinsComponent implements OnInit, OnDestroy {\r\n\r\n  menuItems: MenuItem[];\r\n\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe((data: {bins: Bin[]}) =>{\r\n      this.menuItems = data.bins.map(p => ({\r\n        id: p.id,\r\n        icon: faHome,\r\n        label: p.name,\r\n        route: [p.id],\r\n        children: []\r\n      }));\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid h-100 px-0\">\n    <div class=\"row h-100 no-gutters\">\n        <emes-side-bar class=\"col-md-3 col-lg-2 d-none d-md-block bg-light\" [header]=\"'Bin'\" [menuItems]=\"menuItems\"></emes-side-bar>\n\n        <main class=\"col d-flex flex-column\">\n            <router-outlet></router-outlet>\n        </main>\n\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { BinService } from '../shared/bin.service';\nimport { Bin } from '../shared/models/bin.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BinResolverService {\n\n  constructor(private binService: BinService, private router: Router) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Bin> {\n    const id = route.paramMap.get('binId');\n    return this.binService.getBin(id as string);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { BinService } from '../shared/bin.service';\nimport { Bin } from '../shared/models/bin.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BinsResolverService {\n\n  constructor(private binService: BinService, private router: Router) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Bin[]> {\n    return this.binService.getBins();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Product } from '../shared/models/product.model';\nimport { ProductService } from '../shared/product.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsResolverService {\n\n  constructor(private productService: ProductService, private router: Router) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Product[]> {\n    \n    return this.productService.getProducts();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Product } from './models/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor() { }\n\n  products: Product[] = [\n    {\n      id: '821c6f60-c7b5-4090-ad6a-0cd25cd4cdfb',\n      name: 'Corn',\n      type: 'Raw'\n    },\n    {\n      id: '6e386b40-9684-4ebd-be32-8f4d8ddcb650',\n      name: 'Product1',\n      type: 'Finished Product'\n    },\n    {\n      id: 'e7dcecae-b6b7-486f-b9df-e6e638d4e98b',\n      name: 'Semi product1',\n      type: 'Semi-Product'\n    }\n  ];\n\n  getProduct(id: string): Observable<Product> {\n    return of(this.products.find(p => p.id === id));\n  }\n\n  getProducts(): Observable<Product[]> {\n    return of(this.products);\n  }\n\n  \n}\n"],"sourceRoot":"webpack:///"}