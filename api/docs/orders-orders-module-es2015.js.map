{"version":3,"sources":["./src/app/orders/create-order/create-order.component.ts","./src/app/orders/create-order/create-order.component.html","./src/app/orders/order-default/order-default.component.ts","./src/app/orders/order-default/order-default.component.html","./src/app/orders/order-viewer/order-viewer.component.ts","./src/app/orders/order-viewer/order-viewer.component.html","./src/app/orders/order/order.component.ts","./src/app/orders/order/order.component.html","./src/app/orders/orders-routing.module.ts","./src/app/orders/orders.module.ts","./src/app/orders/orders/orders.component.ts","./src/app/orders/orders/orders.component.html","./src/app/orders/route-resolvers/order-resolver.service.ts","./src/app/orders/route-resolvers/order-scheme-resolver.service.ts","./src/app/orders/route-resolvers/orders-resolver.service.ts","./src/app/orders/shared/order.service.ts"],"names":[],"mappings":"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","file":"orders-orders-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'emes-create-order',\r\n  templateUrl: './create-order.component.html',\r\n  styleUrls: ['./create-order.component.scss']\r\n})\r\nexport class CreateOrderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>create-order works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'emes-order-default',\r\n  templateUrl: './order-default.component.html',\r\n  styleUrls: ['./order-default.component.scss']\r\n})\r\nexport class OrderDefaultComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid d-flex flex-column flex-fill\">\r\n  <div class=\"row p-0 flex-fill align-items-center mt-5\">\r\n    <div class=\"col text-center\">Select a Order in the left hand side list</div>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\r\nimport {OrderAttribute} from '../shared/models/order-attribute.model';\r\n\r\n@Component({\r\n  selector: 'emes-order-viewer',\r\n  templateUrl: './order-viewer.component.html',\r\n  styleUrls: ['./order-viewer.component.scss']\r\n})\r\nexport class OrderViewerComponent implements OnInit, OnChanges {\r\n  myContext = 'hello';\r\n  @Input() config: {\r\n    attributes: {\r\n      [key: string]: OrderAttribute\r\n    }\r\n  };\r\n\r\n  @Output()\r\n  submitted: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  dismissed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // Indicate roles selected\r\n  itemsSelected = false;\r\n\r\n\r\n  // The list of group members, name and description of the group.\r\n  // A deep copy of the config.group object is needed in case user decide to cancel the form\r\n  items: any[] = [];\r\n\r\n  selectedItems: any[] = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.config.attributes);\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n\r\n  }\r\n\r\n  selectItems(rows: any[]) {\r\n    this.selectedItems = this.items.filter(r => rows.map(x => x.data.id).includes(r.id));\r\n    if (this.selectedItems.length > 0) {\r\n      this.itemsSelected = true;\r\n    } else {\r\n      this.itemsSelected = false;\r\n    }\r\n  }\r\n\r\n  submitForm(method: string) {\r\n    this.submitted.emit(this.selectedItems);\r\n  }\r\n\r\n  dismissForm(method: string) {\r\n    this.dismissed.emit(method);\r\n  }\r\n\r\n}\r\n","<div class=\"modal-content\">\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">{{'ORDER.CREATE ORDER' | translate}}</h5>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissForm('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body d-flex flex-column\" style=\"height:60vh;\">\r\n    <ng-container *ngTemplateOutlet=\"dynamicForm; context: config.attributes\"></ng-container>\r\n    <ng-template #dynamicForm let-attributes>\r\n      <form *ngFor=\"let attribute of attributes | keyvalue\">\r\n        <h3>Key{{attribute.key}}</h3>\r\n        <ng-container *ngIf=\"attribute.value.attributes && attribute.value.attributes.length > 0\">\r\n          <ng-container *ngTemplateOutlet=\"dynamicForm; context: attribute.value.attributes\"></ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!attribute.value.attributes || attribute.value.attributes.length === 0\">\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-sm-12 col-md-12\">\r\n              <label for=\"inputId\">Id</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"attribute.value.value\">\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </form>\r\n    </ng-template>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" (click)=\"dismissForm('Close button')\" class=\"btn btn-secondary\">Cancel</button>\r\n    <button type=\"button\" [disabled]=\"!itemsSelected\" (click)=\"submitForm('OK')\" class=\"btn btn-primary\">Ok</button>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Subject} from 'rxjs';\r\nimport {Order} from '../shared/models/order.model';\r\nimport {IconDefinition, faEllipsisV} from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'emes-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n  order: Order;\r\n  isAuthor = true;\r\n  isOwner = true;\r\n  // Icon\r\n  faEllipsisV: IconDefinition = faEllipsisV;\r\n  selectedType: string;\r\n  types: string[] = [];\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n      if (data.order) {\r\n        this.order = data.order;\r\n      }\r\n      console.log(this.order);\r\n    });\r\n  }\r\n  save(close: boolean) {\r\n\r\n  }\r\n\r\n  close() {\r\n\r\n  }\r\n\r\n  copy() {\r\n\r\n  }\r\n\r\n  delete() {\r\n\r\n  }\r\n\r\n  typeSelected() {\r\n\r\n  }\r\n\r\n  nameChanged($event) {\r\n\r\n  }\r\n}\r\n","<div class=\"container-fluid d-flex flex-column\">\r\n  <div class=\"row justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n    <div class=\"col-auto\">\r\n      <h2>\r\n        Order Management\r\n      </h2>\r\n    </div>\r\n\r\n    <div class=\"col-auto\">\r\n      <div class=\"btn-toolbar mb-2 mb-md-0\">\r\n\r\n        <div *ngIf=\"isAuthor\" class=\"btn-group mr-2\">\r\n          <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"save(false)\">Save</button>\r\n          <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\r\n            <button class=\"btn btn-sm btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\r\n            <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n              <button ngbDropdownItem (click)=\"save(false)\">Save</button>\r\n              <button ngbDropdownItem (click)=\"save(true)\">Save & Close</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"button\" class=\"btn btn-sm btn-secondary mr-2\" (click)=\"close()\">Close</button>\r\n\r\n        <div class=\"btn-group mr-2\" ngbDropdown placement=\"bottom-right\">\r\n          <button type=\"button\" class=\"btn btn-sm btn-link dropdown-icon\" ngbDropdownToggle>\r\n            <fa-icon class=\"text-primary pointer\" [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\r\n          </button>\r\n          <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n            <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"save(true)\">Save</button>\r\n            <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"close()\">Save & Close</button>\r\n            <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"copy()\">Copy</button>\r\n            <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"delete()\">Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<form>\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputId\">Id</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"order.id\" disabled>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"selectType\">Select Type</label>\r\n      <select [(ngModel)]=\"selectedType\" name=\"selectType\" class=\"form-control\" (ngModelChange)=\"typeSelected()\">\r\n        <option [ngValue]=\"undefined\">Please select a type</option>\r\n        <option [ngValue]=\"type\" *ngFor=\"let type of types\">\r\n          {{ type }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputType\">Type</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputType\" name=\"inputType\" [(ngModel)]=\"order.status\" disabled>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {OrdersComponent} from './orders/orders.component';\r\nimport {OrdersResolverService} from './route-resolvers/orders-resolver.service';\r\nimport {OrderResolverService} from './route-resolvers/order-resolver.service';\r\nimport {OrderComponent} from './order/order.component';\r\nimport {OrderSchemeResolverService} from './route-resolvers/order-scheme-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: OrdersComponent, resolve: {orders: OrdersResolverService, scheme: OrderSchemeResolverService}},\r\n  {path: ':orderId', resolve: {order: OrderResolverService}, component: OrderComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrdersRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport { OrderComponent } from './order/order.component';\r\nimport { OrderDefaultComponent } from './order-default/order-default.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {OrdersRoutingModule} from './orders-routing.module';\r\nimport { CreateOrderComponent } from './create-order/create-order.component';\r\nimport { OrderViewerComponent } from './order-viewer/order-viewer.component';\r\n\r\n@NgModule({\r\n  declarations: [OrdersComponent, OrderComponent, OrderDefaultComponent, CreateOrderComponent, OrderViewerComponent],\r\n  imports: [\r\n    SharedModule,\r\n    OrdersRoutingModule\r\n  ]\r\n})\r\nexport class OrdersModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {combineLatest, Observable, Subject} from 'rxjs';\r\nimport {Order} from '../shared/models/order.model';\r\nimport {DataTableSettings, DataTableColumnDefinition, DataTableToolbarControl} from 'data-table';\r\nimport {faExternalLinkAlt, faPlus, faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport {OrderService} from '../shared/order.service';\r\nimport {Scheme} from '../../shared/models/scheme.model';\r\nimport {SchemeField} from '../../shared/models/scheme-field.model';\r\nimport {OrderAttribute} from '../shared/models/order-attribute.model';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {DynamicFormService, ModalConfig, CustomValidators} from 'dynamic-form';\r\n\r\n@Component({\r\n  selector: 'emes-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.scss']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  settings: DataTableSettings;\r\n  // Indicator whether current user is admin\r\n  isAdmin = true;\r\n  closeResult = '';\r\n\r\n  orderScheme: Scheme;\r\n\r\n  // Preferences of order columns\r\n  LOCAL_STORAGE_PREFERENCES = 'ORDERS';\r\n\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private orderService: OrderService,\r\n              private translateService: TranslateService,\r\n              private dynamicFormService: DynamicFormService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // TODO: set customized order columns\r\n    const preferences = this.getPreferences();\r\n\r\n    const observables: Observable<any>[] = [];\r\n    observables.push(this.route.data.pipe(takeUntil(this.unsubscribe)));\r\n    observables.push(this.orderService.orders$.pipe(takeUntil(this.unsubscribe)));\r\n    combineLatest(observables).subscribe(x => {\r\n      const columnDefinitions: DataTableColumnDefinition[] = [\r\n        {id: '1', name: 'id', label: 'Id', type: 'text', visible: true, searchable: false, filterMode: 'none'},\r\n        {id: '2', name: 'status', label: 'Status', type: 'text', visible: true, searchable: false, filterMode: 'text'},\r\n        {id: '2', name: 'template.name', label: 'Template', type: 'text', visible: true, searchable: false, filterMode: 'text'},\r\n        {id: '2', name: 'lastChange', label: 'LastChange', type: 'text', visible: true, searchable: false, filterMode: 'text'},\r\n      ];\r\n      this.orderScheme = x[0].scheme;\r\n      const orders: Order[] = x[1];\r\n      this.setDynamicColumns(this.orderScheme.fields, columnDefinitions);\r\n      columnDefinitions.push({\r\n          id: '4',\r\n          name: 'view',\r\n          label: 'View',\r\n          type: 'icon',\r\n          visible: true,\r\n          searchable: false,\r\n          filterMode: 'none',\r\n          click: this.viewOrder.bind(this)\r\n        },\r\n        {\r\n          id: '5',\r\n          name: 'delete',\r\n          label: 'Delete',\r\n          type: 'icon',\r\n          visible: true,\r\n          searchable: false,\r\n          filterMode: 'none',\r\n          click: this.deleteOrder.bind(this)\r\n        });\r\n      this.settings = {\r\n        selectableRows: false,\r\n        columnDefinitions,\r\n        data: orders.map(o => ({...o, ...this.getValueForRecord(this.orderScheme, o), view: faExternalLinkAlt, delete: faTrash})),\r\n        toolBar: {\r\n          right: [\r\n            ...this.isAdmin ? [{\r\n              name: 'New Order',\r\n              type: 'button',\r\n              icon: faPlus,\r\n              callback: this.createOrder.bind(this)\r\n            } as DataTableToolbarControl] : [],\r\n            {type: 'filter'} as DataTableToolbarControl\r\n          ]\r\n        },\r\n        groupBy: []\r\n      };\r\n    });\r\n  }\r\n\r\n  setDynamicColumns(fields: SchemeField[], columnDefinitions: DataTableColumnDefinition[]): void {\r\n    fields.forEach(field => {\r\n      if (field.type.toLowerCase() === 'array' || field.type.toLowerCase() === 'struct') {\r\n        this.setDynamicColumns(field.fields, columnDefinitions);\r\n      } else {\r\n        columnDefinitions.push({\r\n          id: field.id,\r\n          name: field.name,\r\n          label: field.name,\r\n          type: 'text',\r\n          visible: true,\r\n          searchable: false,\r\n          filterMode: 'text'\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getValueForRecord(scheme: Scheme, order: Order): any {\r\n    const final: any = {};\r\n    scheme.fields.forEach(field => {\r\n      const attribute: OrderAttribute = order.attributes[field.name];\r\n      if (attribute) {\r\n        this.setValueFromOrderAttribute(attribute, field, final);\r\n      }\r\n    });\r\n    return final;\r\n  }\r\n\r\n  setValueFromOrderAttribute(orderAttribute: OrderAttribute, field: SchemeField, final: any): void {\r\n    if (field.type === 'array') {\r\n      field.fields.forEach(subField => {\r\n        const subAttribute = orderAttribute.attributes[subField.name];\r\n        if (subAttribute) {\r\n          this.setValueFromOrderAttribute(subAttribute, subField, final);\r\n        }\r\n      });\r\n    } else if (field.type === 'struct') {\r\n\r\n    } else {\r\n      final[field.name] = orderAttribute.value;\r\n    }\r\n  }\r\n\r\n  getPreferences() {\r\n    const pref = JSON.parse(localStorage.getItem(this.LOCAL_STORAGE_PREFERENCES));\r\n    return pref;\r\n  }\r\n\r\n  createOrder() {\r\n    const config: ModalConfig = {\r\n      headerText: 'Create a user',\r\n      submitText: 'OK',\r\n      closeText: 'Cancel',\r\n      onSubmit: (e: any) => this.doCreateOrder(e),\r\n      onDismiss: (e: string) => {\r\n      },\r\n      extraButtons: [],\r\n      fields: []\r\n    };\r\n    this.orderScheme.fields.forEach(field => {\r\n      this.setFieldsByOrderScheme('', field, config.fields);\r\n    });\r\n    this.dynamicFormService.popDynamicFormModal(config);\r\n  }\r\n\r\n  getEmptyAttributesByField(fields: SchemeField[]): { [key: string]: OrderAttribute } {\r\n    const attributes: { [key: string]: OrderAttribute } = {};\r\n    fields.forEach(field => {\r\n      attributes[field.name] = {\r\n        id: '',\r\n        name: field.name,\r\n        type: field.type,\r\n        value: '',\r\n        suffix: '',\r\n        attributes: {}\r\n      };\r\n      if (field.type === 'array') {\r\n        this.getEmptyAttributesByField(field.fields);\r\n      } else if (field.type === 'struct') {\r\n\r\n      } else {\r\n      }\r\n    });\r\n    return attributes;\r\n  }\r\n\r\n  setFieldsByOrderScheme(parentName: string, field: SchemeField, fieldConfigs: any[]) {\r\n    const theFieldName = parentName !== '' ? parentName + '.' + field.name : field.name;\r\n    if (field.type.toLowerCase() === 'array') {\r\n      field.fields.forEach(subField => this.setFieldsByOrderScheme(theFieldName, subField, fieldConfigs));\r\n    } else if (field.type.toLowerCase() === 'struct') {\r\n\r\n    } else {\r\n      fieldConfigs.push({\r\n        type: 'input',\r\n        label: field.name,\r\n        name: theFieldName,\r\n        placeholder: 'Enter ' + field.name,\r\n        validation: [\r\n          CustomValidators.required(field.name + ' required'),\r\n        ]\r\n      });\r\n    }\r\n  }\r\n\r\n  doCreateOrder(e: any) {\r\n    const attributes = {};\r\n    this.orderScheme.fields.forEach(field => this.setAttributes('', field, e, attributes));\r\n    this.orderService.create(attributes).pipe(takeUntil(this.unsubscribe)).subscribe();\r\n  }\r\n\r\n  setAttributes(parentName: string, field: SchemeField, results: any, attributes: { [key: string]: OrderAttribute }): void {\r\n    const theFieldName = parentName !== '' ? parentName + '.' + field.name : field.name;\r\n    attributes[field.name] = {\r\n      id: '',\r\n      name: field.name,\r\n      type: field.type,\r\n      value: '',\r\n      suffix: '',\r\n      attributes: {}\r\n    };\r\n    if (field.type.toLowerCase() === 'array') {\r\n      field.fields.forEach(subField => this.setAttributes(theFieldName, subField, results, attributes[field.name].attributes));\r\n    } else if (field.type.toLowerCase() === 'struct') {\r\n\r\n    } else {\r\n      attributes[field.name].value = results[theFieldName];\r\n    }\r\n  }\r\n\r\n  viewOrder() {\r\n\r\n  }\r\n\r\n  deleteOrder() {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n  <h2>{{'ORDER.ORDERS' | translate}}</h2>\r\n</div>\r\n<csps-data-table [settings]=\"settings\" class=\"d-flex flex-fill\"></csps-data-table>\r\n","import { Injectable } from '@angular/core';\r\nimport {ProductService} from '../../products/shared/product.service';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Product} from '../../products/shared/models/product.model';\r\nimport {OrderService} from '../shared/order.service';\r\nimport {Order} from '../shared/models/order.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderResolverService {\r\n\r\n  constructor(private orderService: OrderService, private router: Router) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Order> {\r\n    const id = route.paramMap.get('orderId');\r\n    return this.orderService.getOrder(id as string);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {OrderService} from '../shared/order.service';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Order} from '../shared/models/order.model';\r\nimport {SchemeService} from '../../shared/services/scheme.service';\r\nimport {Scheme} from '../../shared/models/scheme.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderSchemeResolverService {\r\n\r\n  private orderSchemeName = 'Order_Scheme';\r\n\r\n  constructor(private schemeService: SchemeService, private router: Router) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Scheme> {\r\n    return this.schemeService.getSchemeByName(this.orderSchemeName);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {OrderService} from '../shared/order.service';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Order} from '../shared/models/order.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersResolverService {\r\n\r\n  constructor(private orderService: OrderService, private router: Router) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Order[]> {\r\n    return this.orderService.getOrders(0, 50);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Product} from '../../products/shared/models/product.model';\r\nimport {BehaviorSubject, Observable, of} from 'rxjs';\r\nimport {Order} from './models/order.model';\r\nimport {environment} from '../../../environments/environment';\r\nimport {MenuItem} from '../../core/layout/menu/menu-item';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {OrderAttribute} from './models/order-attribute.model';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  private orderUrl = environment.baseUrl + 'api/v1/orders';  // URL to web api\r\n  orders$: BehaviorSubject<Order[]> = new BehaviorSubject<Order[]>([]);\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  orders: Order[] = [\r\n    {\r\n      id: '60266424',\r\n      status: 'New',\r\n      lastChange: '2021-08-26T09:30:43:345',\r\n      internalOrder: true,\r\n      attributes: {\r\n        erp_body_data: {\r\n          id: '618589669',\r\n          name: 'erp_body_data',\r\n          type: 'array',\r\n          suffix: 'erp_body_data',\r\n          attributes: {\r\n            vinCode: {\r\n              id: '1',\r\n              name: 'vinCode',\r\n              type: 'string',\r\n              value: 'LFC9888TG3000NH',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            bodyType: {\r\n              id: '2',\r\n              name: 'bodyType',\r\n              type: 'string',\r\n              value: 'DB',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            firstColorCode: {\r\n              id: '3',\r\n              name: 'firstColorCode',\r\n              type: 'string',\r\n              value: '10',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            secondColorCode: {\r\n              id: '4',\r\n              name: 'secondColorCode',\r\n              type: 'string',\r\n              value: '20',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            carCategory: {\r\n              id: '5',\r\n              name: 'carCategory',\r\n              type: 'string',\r\n              value: '-Y',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            roofWindow: {\r\n              id: '6',\r\n              name: 'carCategory',\r\n              type: 'string',\r\n              value: '-Y',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            orderNumber: {\r\n              id: '7',\r\n              name: 'orderNumber',\r\n              type: 'string',\r\n              value: 'H1000309033',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            orderType: {\r\n              id: '8',\r\n              name: 'orderType',\r\n              type: 'string',\r\n              value: '01',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            plantId: {\r\n              id: '9',\r\n              name: 'plantId',\r\n              type: 'string',\r\n              value: 'H',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            twoTonedCar: {\r\n              id: '10',\r\n              name: 'twoTonedCar',\r\n              type: 'string',\r\n              value: 'H',\r\n              suffix: '',\r\n              attributes: {}\r\n            }\r\n          }\r\n        }\r\n      },\r\n      template: {\r\n        id: '49075898',\r\n        name: 'Standard Run',\r\n        nextId: '21',\r\n        valid: true,\r\n        parent: null,\r\n        selector: '49085817',\r\n        leadTime: null,\r\n        group: {\r\n          id: '57100',\r\n          name: 'complete process'\r\n        },\r\n        templateType: 'WITH_MATCHER',\r\n        matcherValid: true,\r\n        comment: '',\r\n        graphics: '',\r\n        variants: []\r\n      }\r\n    }\r\n  ];\r\n\r\n  getOrder(id: string): Observable<Order> {\r\n    return of(this.orders.find(p => p.id === id) as Order);\r\n  }\r\n\r\n  getOrders(page: number, size: number): Observable<Order[]> {\r\n    // const url = `${this.orderUrl}/?page=${page}&size=${size}`;\r\n    // return this.http.get<Order[]>(url).pipe(tap(x => {\r\n    //   this.orders$.next(x);\r\n    // }));\r\n    this.orders$.next(this.orders);\r\n    return of(this.orders);\r\n  }\r\n\r\n  create(attributes: { [key: string]: OrderAttribute }): Observable<any> {\r\n    const url = `${this.orderUrl}`;\r\n    const payload = {\r\n      isInternal: true,\r\n      attributes\r\n    };\r\n    return this.http.post(url, payload).pipe(tap(x => {\r\n        const newOrder: Order = {\r\n          id: x,\r\n          status: 'new',\r\n          lastChange: (new Date()).toString(),\r\n          internalOrder: true,\r\n          attributes,\r\n          template: null\r\n        };\r\n        const orders = this.orders$.getValue();\r\n        orders.push(newOrder);\r\n        this.orders$.next(orders);\r\n    }));\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}