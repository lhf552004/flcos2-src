{"version":3,"sources":["webpack:///src/app/orders/create-order/create-order.component.ts","webpack:///src/app/orders/create-order/create-order.component.html","webpack:///src/app/orders/order-default/order-default.component.ts","webpack:///src/app/orders/order-default/order-default.component.html","webpack:///src/app/orders/order-viewer/order-viewer.component.ts","webpack:///src/app/orders/order-viewer/order-viewer.component.html","webpack:///src/app/orders/order/order.component.ts","webpack:///src/app/orders/order/order.component.html","webpack:///src/app/orders/orders-routing.module.ts","webpack:///src/app/orders/orders.module.ts","webpack:///src/app/orders/orders/orders.component.ts","webpack:///src/app/orders/orders/orders.component.html","webpack:///src/app/orders/route-resolvers/order-resolver.service.ts","webpack:///src/app/orders/route-resolvers/order-scheme-resolver.service.ts","webpack:///src/app/orders/route-resolvers/orders-resolver.service.ts","webpack:///src/app/orders/shared/order.service.ts"],"names":["CreateOrderComponent","selector","templateUrl","styleUrls","OrderDefaultComponent","OrderViewerComponent","myContext","submitted","dismissed","itemsSelected","items","selectedItems","console","log","config","attributes","rows","filter","r","map","x","data","id","includes","length","method","emit","dismissForm","submitForm","OrderComponent","route","isAuthor","isOwner","faEllipsisV","types","unsubscribe","pipe","subscribe","order","close","$event","typeSelected","routes","path","component","resolve","orders","scheme","OrdersRoutingModule","forChild","imports","exports","OrdersModule","declarations","OrdersComponent","orderService","translateService","dynamicFormService","isAdmin","closeResult","LOCAL_STORAGE_PREFERENCES","preferences","getPreferences","observables","push","orders$","columnDefinitions","name","label","type","visible","searchable","filterMode","orderScheme","setDynamicColumns","fields","click","viewOrder","bind","deleteOrder","settings","selectableRows","o","getValueForRecord","view","toolBar","right","icon","callback","createOrder","groupBy","forEach","field","toLowerCase","final","attribute","setValueFromOrderAttribute","orderAttribute","subField","subAttribute","value","pref","JSON","parse","localStorage","getItem","headerText","submitText","closeText","onSubmit","e","doCreateOrder","onDismiss","extraButtons","setFieldsByOrderScheme","popDynamicFormModal","suffix","getEmptyAttributesByField","parentName","fieldConfigs","theFieldName","placeholder","validation","required","setAttributes","create","results","OrderResolverService","router","state","paramMap","get","getOrder","providedIn","OrderSchemeResolverService","schemeService","orderSchemeName","getSchemeByName","OrdersResolverService","getOrders","OrderService","http","orderUrl","baseUrl","status","lastChange","internalOrder","erp_body_data","vinCode","bodyType","firstColorCode","secondColorCode","carCategory","roofWindow","orderNumber","orderType","plantId","twoTonedCar","template","nextId","valid","parent","leadTime","group","templateType","matcherValid","comment","graphics","variants","find","p","page","size","next","url","payload","isInternal","post","newOrder","Date","toString","getValue"],"mappings":"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","file":"orders-orders-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'emes-create-order',\r\n  templateUrl: './create-order.component.html',\r\n  styleUrls: ['./create-order.component.scss']\r\n})\r\nexport class CreateOrderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>create-order works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'emes-order-default',\r\n  templateUrl: './order-default.component.html',\r\n  styleUrls: ['./order-default.component.scss']\r\n})\r\nexport class OrderDefaultComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid d-flex flex-column flex-fill\">\r\n  <div class=\"row p-0 flex-fill align-items-center mt-5\">\r\n    <div class=\"col text-center\">Select a Order in the left hand side list</div>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\r\nimport {OrderAttribute} from '../shared/models/order-attribute.model';\r\n\r\n@Component({\r\n  selector: 'emes-order-viewer',\r\n  templateUrl: './order-viewer.component.html',\r\n  styleUrls: ['./order-viewer.component.scss']\r\n})\r\nexport class OrderViewerComponent implements OnInit, OnChanges {\r\n  myContext = 'hello';\r\n  @Input() config: {\r\n    attributes: {\r\n      [key: string]: OrderAttribute\r\n    }\r\n  };\r\n\r\n  @Output()\r\n  submitted: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  dismissed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // Indicate roles selected\r\n  itemsSelected = false;\r\n\r\n\r\n  // The list of group members, name and description of the group.\r\n  // A deep copy of the config.group object is needed in case user decide to cancel the form\r\n  items: any[] = [];\r\n\r\n  selectedItems: any[] = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.config.attributes);\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n\r\n  }\r\n\r\n  selectItems(rows: any[]) {\r\n    this.selectedItems = this.items.filter(r => rows.map(x => x.data.id).includes(r.id));\r\n    if (this.selectedItems.length > 0) {\r\n      this.itemsSelected = true;\r\n    } else {\r\n      this.itemsSelected = false;\r\n    }\r\n  }\r\n\r\n  submitForm(method: string) {\r\n    this.submitted.emit(this.selectedItems);\r\n  }\r\n\r\n  dismissForm(method: string) {\r\n    this.dismissed.emit(method);\r\n  }\r\n\r\n}\r\n","<div class=\"modal-content\">\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">{{'ORDER.CREATE ORDER' | translate}}</h5>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissForm('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body d-flex flex-column\" style=\"height:60vh;\">\r\n    <ng-container *ngTemplateOutlet=\"dynamicForm; context: config.attributes\"></ng-container>\r\n    <ng-template #dynamicForm let-attributes>\r\n      <form *ngFor=\"let attribute of attributes | keyvalue\">\r\n        <h3>Key{{attribute.key}}</h3>\r\n        <ng-container *ngIf=\"attribute.value.attributes && attribute.value.attributes.length > 0\">\r\n          <ng-container *ngTemplateOutlet=\"dynamicForm; context: attribute.value.attributes\"></ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!attribute.value.attributes || attribute.value.attributes.length === 0\">\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-sm-12 col-md-12\">\r\n              <label for=\"inputId\">Id</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"attribute.value.value\">\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </form>\r\n    </ng-template>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" (click)=\"dismissForm('Close button')\" class=\"btn btn-secondary\">Cancel</button>\r\n    <button type=\"button\" [disabled]=\"!itemsSelected\" (click)=\"submitForm('OK')\" class=\"btn btn-primary\">Ok</button>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Subject} from 'rxjs';\r\nimport {Order} from '../shared/models/order.model';\r\nimport {IconDefinition, faEllipsisV} from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'emes-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n  order: Order;\r\n  isAuthor = true;\r\n  isOwner = true;\r\n  // Icon\r\n  faEllipsisV: IconDefinition = faEllipsisV;\r\n  selectedType: string;\r\n  types: string[] = [];\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n      if (data.order) {\r\n        this.order = data.order;\r\n      }\r\n      console.log(this.order);\r\n    });\r\n  }\r\n  save(close: boolean) {\r\n\r\n  }\r\n\r\n  close() {\r\n\r\n  }\r\n\r\n  copy() {\r\n\r\n  }\r\n\r\n  delete() {\r\n\r\n  }\r\n\r\n  typeSelected() {\r\n\r\n  }\r\n\r\n  nameChanged($event) {\r\n\r\n  }\r\n}\r\n","<div class=\"container-fluid d-flex flex-column\">\r\n  <div class=\"row justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n    <div class=\"col-auto\">\r\n      <h2>\r\n        Order Management\r\n      </h2>\r\n    </div>\r\n\r\n    <div class=\"col-auto\">\r\n      <div class=\"btn-toolbar mb-2 mb-md-0\">\r\n\r\n        <div *ngIf=\"isAuthor\" class=\"btn-group mr-2\">\r\n          <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"save(false)\">Save</button>\r\n          <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\r\n            <button class=\"btn btn-sm btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\r\n            <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n              <button ngbDropdownItem (click)=\"save(false)\">Save</button>\r\n              <button ngbDropdownItem (click)=\"save(true)\">Save & Close</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"button\" class=\"btn btn-sm btn-secondary mr-2\" (click)=\"close()\">Close</button>\r\n\r\n        <div class=\"btn-group mr-2\" ngbDropdown placement=\"bottom-right\">\r\n          <button type=\"button\" class=\"btn btn-sm btn-link dropdown-icon\" ngbDropdownToggle>\r\n            <fa-icon class=\"text-primary pointer\" [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\r\n          </button>\r\n          <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n            <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"save(true)\">Save</button>\r\n            <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"close()\">Save & Close</button>\r\n            <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"copy()\">Copy</button>\r\n            <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"delete()\">Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<form>\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputId\">Id</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"order.id\" disabled>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"selectType\">Select Type</label>\r\n      <select [(ngModel)]=\"selectedType\" name=\"selectType\" class=\"form-control\" (ngModelChange)=\"typeSelected()\">\r\n        <option [ngValue]=\"undefined\">Please select a type</option>\r\n        <option [ngValue]=\"type\" *ngFor=\"let type of types\">\r\n          {{ type }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group col-md-6\">\r\n      <label for=\"inputType\">Type</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputType\" name=\"inputType\" [(ngModel)]=\"order.status\" disabled>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {OrdersComponent} from './orders/orders.component';\r\nimport {OrdersResolverService} from './route-resolvers/orders-resolver.service';\r\nimport {OrderResolverService} from './route-resolvers/order-resolver.service';\r\nimport {OrderComponent} from './order/order.component';\r\nimport {OrderSchemeResolverService} from './route-resolvers/order-scheme-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: OrdersComponent, resolve: {orders: OrdersResolverService, scheme: OrderSchemeResolverService}},\r\n  {path: ':orderId', resolve: {order: OrderResolverService}, component: OrderComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrdersRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport { OrderComponent } from './order/order.component';\r\nimport { OrderDefaultComponent } from './order-default/order-default.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {OrdersRoutingModule} from './orders-routing.module';\r\nimport { CreateOrderComponent } from './create-order/create-order.component';\r\nimport { OrderViewerComponent } from './order-viewer/order-viewer.component';\r\n\r\n@NgModule({\r\n  declarations: [OrdersComponent, OrderComponent, OrderDefaultComponent, CreateOrderComponent, OrderViewerComponent],\r\n  imports: [\r\n    SharedModule,\r\n    OrdersRoutingModule\r\n  ]\r\n})\r\nexport class OrdersModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {combineLatest, Observable, Subject} from 'rxjs';\r\nimport {Order} from '../shared/models/order.model';\r\nimport {DataTableSettings, DataTableColumnDefinition, DataTableToolbarControl} from 'data-table';\r\nimport {faExternalLinkAlt, faPlus, faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport {OrderService} from '../shared/order.service';\r\nimport {Scheme} from '../../shared/models/scheme.model';\r\nimport {SchemeField} from '../../shared/models/scheme-field.model';\r\nimport {OrderAttribute} from '../shared/models/order-attribute.model';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {DynamicFormService, ModalConfig, CustomValidators} from 'dynamic-form';\r\n\r\n@Component({\r\n  selector: 'emes-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.scss']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  settings: DataTableSettings;\r\n  // Indicator whether current user is admin\r\n  isAdmin = true;\r\n  closeResult = '';\r\n\r\n  orderScheme: Scheme;\r\n\r\n  // Preferences of order columns\r\n  LOCAL_STORAGE_PREFERENCES = 'ORDERS';\r\n\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private orderService: OrderService,\r\n              private translateService: TranslateService,\r\n              private dynamicFormService: DynamicFormService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // TODO: set customized order columns\r\n    const preferences = this.getPreferences();\r\n\r\n    const observables: Observable<any>[] = [];\r\n    observables.push(this.route.data.pipe(takeUntil(this.unsubscribe)));\r\n    observables.push(this.orderService.orders$.pipe(takeUntil(this.unsubscribe)));\r\n    combineLatest(observables).subscribe(x => {\r\n      const columnDefinitions: DataTableColumnDefinition[] = [\r\n        {id: '1', name: 'id', label: 'Id', type: 'text', visible: true, searchable: false, filterMode: 'none'},\r\n        {id: '2', name: 'status', label: 'Status', type: 'text', visible: true, searchable: false, filterMode: 'text'},\r\n        {id: '2', name: 'template.name', label: 'Template', type: 'text', visible: true, searchable: false, filterMode: 'text'},\r\n        {id: '2', name: 'lastChange', label: 'LastChange', type: 'text', visible: true, searchable: false, filterMode: 'text'},\r\n      ];\r\n      this.orderScheme = x[0].scheme;\r\n      const orders: Order[] = x[1];\r\n      this.setDynamicColumns(this.orderScheme.fields, columnDefinitions);\r\n      columnDefinitions.push({\r\n          id: '4',\r\n          name: 'view',\r\n          label: 'View',\r\n          type: 'icon',\r\n          visible: true,\r\n          searchable: false,\r\n          filterMode: 'none',\r\n          click: this.viewOrder.bind(this)\r\n        },\r\n        {\r\n          id: '5',\r\n          name: 'delete',\r\n          label: 'Delete',\r\n          type: 'icon',\r\n          visible: true,\r\n          searchable: false,\r\n          filterMode: 'none',\r\n          click: this.deleteOrder.bind(this)\r\n        });\r\n      this.settings = {\r\n        selectableRows: false,\r\n        columnDefinitions,\r\n        data: orders.map(o => ({...o, ...this.getValueForRecord(this.orderScheme, o), view: faExternalLinkAlt, delete: faTrash})),\r\n        toolBar: {\r\n          right: [\r\n            ...this.isAdmin ? [{\r\n              name: 'New Order',\r\n              type: 'button',\r\n              icon: faPlus,\r\n              callback: this.createOrder.bind(this)\r\n            } as DataTableToolbarControl] : [],\r\n            {type: 'filter'} as DataTableToolbarControl\r\n          ]\r\n        },\r\n        groupBy: []\r\n      };\r\n    });\r\n  }\r\n\r\n  setDynamicColumns(fields: SchemeField[], columnDefinitions: DataTableColumnDefinition[]): void {\r\n    fields.forEach(field => {\r\n      if (field.type.toLowerCase() === 'array' || field.type.toLowerCase() === 'struct') {\r\n        this.setDynamicColumns(field.fields, columnDefinitions);\r\n      } else {\r\n        columnDefinitions.push({\r\n          id: field.id,\r\n          name: field.name,\r\n          label: field.name,\r\n          type: 'text',\r\n          visible: true,\r\n          searchable: false,\r\n          filterMode: 'text'\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getValueForRecord(scheme: Scheme, order: Order): any {\r\n    const final: any = {};\r\n    scheme.fields.forEach(field => {\r\n      const attribute: OrderAttribute = order.attributes[field.name];\r\n      if (attribute) {\r\n        this.setValueFromOrderAttribute(attribute, field, final);\r\n      }\r\n    });\r\n    return final;\r\n  }\r\n\r\n  setValueFromOrderAttribute(orderAttribute: OrderAttribute, field: SchemeField, final: any): void {\r\n    if (field.type === 'array') {\r\n      field.fields.forEach(subField => {\r\n        const subAttribute = orderAttribute.attributes[subField.name];\r\n        if (subAttribute) {\r\n          this.setValueFromOrderAttribute(subAttribute, subField, final);\r\n        }\r\n      });\r\n    } else if (field.type === 'struct') {\r\n\r\n    } else {\r\n      final[field.name] = orderAttribute.value;\r\n    }\r\n  }\r\n\r\n  getPreferences() {\r\n    const pref = JSON.parse(localStorage.getItem(this.LOCAL_STORAGE_PREFERENCES));\r\n    return pref;\r\n  }\r\n\r\n  createOrder() {\r\n    const config: ModalConfig = {\r\n      headerText: 'Create a user',\r\n      submitText: 'OK',\r\n      closeText: 'Cancel',\r\n      onSubmit: (e: any) => this.doCreateOrder(e),\r\n      onDismiss: (e: string) => {\r\n      },\r\n      extraButtons: [],\r\n      fields: []\r\n    };\r\n    this.orderScheme.fields.forEach(field => {\r\n      this.setFieldsByOrderScheme('', field, config.fields);\r\n    });\r\n    this.dynamicFormService.popDynamicFormModal(config);\r\n  }\r\n\r\n  getEmptyAttributesByField(fields: SchemeField[]): { [key: string]: OrderAttribute } {\r\n    const attributes: { [key: string]: OrderAttribute } = {};\r\n    fields.forEach(field => {\r\n      attributes[field.name] = {\r\n        id: '',\r\n        name: field.name,\r\n        type: field.type,\r\n        value: '',\r\n        suffix: '',\r\n        attributes: {}\r\n      };\r\n      if (field.type === 'array') {\r\n        this.getEmptyAttributesByField(field.fields);\r\n      } else if (field.type === 'struct') {\r\n\r\n      } else {\r\n      }\r\n    });\r\n    return attributes;\r\n  }\r\n\r\n  setFieldsByOrderScheme(parentName: string, field: SchemeField, fieldConfigs: any[]) {\r\n    const theFieldName = parentName !== '' ? parentName + '.' + field.name : field.name;\r\n    if (field.type.toLowerCase() === 'array') {\r\n      field.fields.forEach(subField => this.setFieldsByOrderScheme(theFieldName, subField, fieldConfigs));\r\n    } else if (field.type.toLowerCase() === 'struct') {\r\n\r\n    } else {\r\n      fieldConfigs.push({\r\n        type: 'input',\r\n        label: field.name,\r\n        name: theFieldName,\r\n        placeholder: 'Enter ' + field.name,\r\n        validation: [\r\n          CustomValidators.required(field.name + ' required'),\r\n        ]\r\n      });\r\n    }\r\n  }\r\n\r\n  doCreateOrder(e: any) {\r\n    const attributes = {};\r\n    this.orderScheme.fields.forEach(field => this.setAttributes('', field, e, attributes));\r\n    this.orderService.create(attributes).pipe(takeUntil(this.unsubscribe)).subscribe();\r\n  }\r\n\r\n  setAttributes(parentName: string, field: SchemeField, results: any, attributes: { [key: string]: OrderAttribute }): void {\r\n    const theFieldName = parentName !== '' ? parentName + '.' + field.name : field.name;\r\n    attributes[field.name] = {\r\n      id: '',\r\n      name: field.name,\r\n      type: field.type,\r\n      value: '',\r\n      suffix: '',\r\n      attributes: {}\r\n    };\r\n    if (field.type.toLowerCase() === 'array') {\r\n      field.fields.forEach(subField => this.setAttributes(theFieldName, subField, results, attributes[field.name].attributes));\r\n    } else if (field.type.toLowerCase() === 'struct') {\r\n\r\n    } else {\r\n      attributes[field.name].value = results[theFieldName];\r\n    }\r\n  }\r\n\r\n  viewOrder() {\r\n\r\n  }\r\n\r\n  deleteOrder() {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n  <h2>{{'ORDER.ORDERS' | translate}}</h2>\r\n</div>\r\n<csps-data-table [settings]=\"settings\" class=\"d-flex flex-fill\"></csps-data-table>\r\n","import { Injectable } from '@angular/core';\r\nimport {ProductService} from '../../products/shared/product.service';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Product} from '../../products/shared/models/product.model';\r\nimport {OrderService} from '../shared/order.service';\r\nimport {Order} from '../shared/models/order.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderResolverService {\r\n\r\n  constructor(private orderService: OrderService, private router: Router) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Order> {\r\n    const id = route.paramMap.get('orderId');\r\n    return this.orderService.getOrder(id as string);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {OrderService} from '../shared/order.service';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Order} from '../shared/models/order.model';\r\nimport {SchemeService} from '../../shared/services/scheme.service';\r\nimport {Scheme} from '../../shared/models/scheme.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderSchemeResolverService {\r\n\r\n  private orderSchemeName = 'Order_Scheme';\r\n\r\n  constructor(private schemeService: SchemeService, private router: Router) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Scheme> {\r\n    return this.schemeService.getSchemeByName(this.orderSchemeName);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {OrderService} from '../shared/order.service';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Order} from '../shared/models/order.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersResolverService {\r\n\r\n  constructor(private orderService: OrderService, private router: Router) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Order[]> {\r\n    return this.orderService.getOrders(0, 50);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Product} from '../../products/shared/models/product.model';\r\nimport {BehaviorSubject, Observable, of} from 'rxjs';\r\nimport {Order} from './models/order.model';\r\nimport {environment} from '../../../environments/environment';\r\nimport {MenuItem} from '../../core/layout/menu/menu-item';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {OrderAttribute} from './models/order-attribute.model';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  private orderUrl = environment.baseUrl + 'api/v1/orders';  // URL to web api\r\n  orders$: BehaviorSubject<Order[]> = new BehaviorSubject<Order[]>([]);\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  orders: Order[] = [\r\n    {\r\n      id: '60266424',\r\n      status: 'New',\r\n      lastChange: '2021-08-26T09:30:43:345',\r\n      internalOrder: true,\r\n      attributes: {\r\n        erp_body_data: {\r\n          id: '618589669',\r\n          name: 'erp_body_data',\r\n          type: 'array',\r\n          suffix: 'erp_body_data',\r\n          attributes: {\r\n            vinCode: {\r\n              id: '1',\r\n              name: 'vinCode',\r\n              type: 'string',\r\n              value: 'LFC9888TG3000NH',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            bodyType: {\r\n              id: '2',\r\n              name: 'bodyType',\r\n              type: 'string',\r\n              value: 'DB',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            firstColorCode: {\r\n              id: '3',\r\n              name: 'firstColorCode',\r\n              type: 'string',\r\n              value: '10',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            secondColorCode: {\r\n              id: '4',\r\n              name: 'secondColorCode',\r\n              type: 'string',\r\n              value: '20',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            carCategory: {\r\n              id: '5',\r\n              name: 'carCategory',\r\n              type: 'string',\r\n              value: '-Y',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            roofWindow: {\r\n              id: '6',\r\n              name: 'carCategory',\r\n              type: 'string',\r\n              value: '-Y',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            orderNumber: {\r\n              id: '7',\r\n              name: 'orderNumber',\r\n              type: 'string',\r\n              value: 'H1000309033',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            orderType: {\r\n              id: '8',\r\n              name: 'orderType',\r\n              type: 'string',\r\n              value: '01',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            plantId: {\r\n              id: '9',\r\n              name: 'plantId',\r\n              type: 'string',\r\n              value: 'H',\r\n              suffix: '',\r\n              attributes: {}\r\n            },\r\n            twoTonedCar: {\r\n              id: '10',\r\n              name: 'twoTonedCar',\r\n              type: 'string',\r\n              value: 'H',\r\n              suffix: '',\r\n              attributes: {}\r\n            }\r\n          }\r\n        }\r\n      },\r\n      template: {\r\n        id: '49075898',\r\n        name: 'Standard Run',\r\n        nextId: '21',\r\n        valid: true,\r\n        parent: null,\r\n        selector: '49085817',\r\n        leadTime: null,\r\n        group: {\r\n          id: '57100',\r\n          name: 'complete process'\r\n        },\r\n        templateType: 'WITH_MATCHER',\r\n        matcherValid: true,\r\n        comment: '',\r\n        graphics: '',\r\n        variants: []\r\n      }\r\n    }\r\n  ];\r\n\r\n  getOrder(id: string): Observable<Order> {\r\n    return of(this.orders.find(p => p.id === id) as Order);\r\n  }\r\n\r\n  getOrders(page: number, size: number): Observable<Order[]> {\r\n    // const url = `${this.orderUrl}/?page=${page}&size=${size}`;\r\n    // return this.http.get<Order[]>(url).pipe(tap(x => {\r\n    //   this.orders$.next(x);\r\n    // }));\r\n    this.orders$.next(this.orders);\r\n    return of(this.orders);\r\n  }\r\n\r\n  create(attributes: { [key: string]: OrderAttribute }): Observable<any> {\r\n    const url = `${this.orderUrl}`;\r\n    const payload = {\r\n      isInternal: true,\r\n      attributes\r\n    };\r\n    return this.http.post(url, payload).pipe(tap(x => {\r\n        const newOrder: Order = {\r\n          id: x,\r\n          status: 'new',\r\n          lastChange: (new Date()).toString(),\r\n          internalOrder: true,\r\n          attributes,\r\n          template: null\r\n        };\r\n        const orders = this.orders$.getValue();\r\n        orders.push(newOrder);\r\n        this.orders$.next(orders);\r\n    }));\r\n  }\r\n}\r\n"]}