{"version":3,"sources":["webpack:///src/app/products/product-default/product-default.component.ts","webpack:///src/app/products/product-default/product-default.component.html","webpack:///src/app/products/product/product.component.ts","webpack:///src/app/products/product/product.component.html","webpack:///src/app/products/products-routing.module.ts","webpack:///src/app/products/products.module.ts","webpack:///src/app/products/products/products.component.ts","webpack:///src/app/products/products/products.component.html","webpack:///src/app/products/route-resolvers/product-resolver.service.ts","webpack:///src/app/products/route-resolvers/products-resolver.service.ts","webpack:///src/app/products/shared/product.service.ts"],"names":["ProductDefaultComponent","console","log","selector","templateUrl","styleUrls","ProductComponent","route","faEllipsisV","product","types","isAuthor","isOwner","unsubscribe","data","pipe","subscribe","next","complete","close","$event","nameChanged","typeSelected","routes","path","canActivate","component","resolve","products","children","ProductsRoutingModule","forChild","imports","exports","ProductsModule","declarations","ProductsComponent","menuItems","map","p","id","icon","label","name","ProductResolverService","productService","router","state","paramMap","get","getProduct","providedIn","ProductsResolverService","getProducts","ProductService","type","find"],"mappings":"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","file":"products-products-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'emes-product-default',\n  templateUrl: './product-default.component.html',\n  styleUrls: ['./product-default.component.scss']\n})\nexport class ProductDefaultComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log('Default product')\n  }\n\n}\n","<div class=\"container-fluid d-flex flex-column flex-fill\">\n    <div class=\"row p-0 flex-fill align-items-center mt-5\">\n      <div class=\"col text-center\">Select a product in the left hand side list</div>\n    </div>\n  </div>\n  ","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {faEllipsisV, IconDefinition} from '@fortawesome/free-solid-svg-icons';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'emes-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss']\r\n})\r\nexport class ProductComponent implements OnInit, OnDestroy {\r\n  // Icon\r\n  faEllipsisV: IconDefinition = faEllipsisV;\r\n\r\n  // Current product\r\n  product: any = {};\r\n\r\n  // Product type\r\n  types: any[] = ['Raw', 'Finished Product', 'Semi-Product'];\r\n  // Selected type\r\n  selectedType: any;\r\n\r\n  // Indicator whether it is a author\r\n  isAuthor = true;\r\n  // Indicator whether it is a owner\r\n  isOwner = true;\r\n\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\r\n      if (data.product) {\r\n        this.product = data.product;\r\n      }\r\n      console.log(this.product);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  save(close: boolean) {\r\n\r\n  }\r\n\r\n  close() {\r\n\r\n  }\r\n\r\n  copy() {\r\n\r\n  }\r\n\r\n  delete() {\r\n\r\n  }\r\n\r\n  typeSelected() {\r\n\r\n  }\r\n\r\n  nameChanged($event) {\r\n\r\n  }\r\n}\r\n","<div class=\"container-fluid d-flex flex-column\">\n    <div class=\"row justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <div class=\"col-auto\">\n            <h2>\n                Product Management\n            </h2>\n        </div>\n\n        <div class=\"col-auto\">\n            <div class=\"btn-toolbar mb-2 mb-md-0\">\n                \n                <div *ngIf=\"isAuthor\" class=\"btn-group mr-2\">\n                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"save(false)\">Save</button>\n                    <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\n                        <button class=\"btn btn-sm btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button ngbDropdownItem (click)=\"save(false)\">Save</button>\n                            <button ngbDropdownItem (click)=\"save(true)\">Save & Close</button>\n                        </div>\n                    </div>\n                </div>\n\n                <button type=\"button\" class=\"btn btn-sm btn-secondary mr-2\" (click)=\"close()\">Close</button>\n\n                <div class=\"btn-group mr-2\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" class=\"btn btn-sm btn-link dropdown-icon\" ngbDropdownToggle>\n                        <fa-icon class=\"text-primary pointer\" [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\n                    </button>\n                    <div class=\"dropdown-menu\" ngbDropdownMenu>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"save(true)\">Save</button>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"close()\">Save & Close</button>\n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"copy()\">Copy</button>   \n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"delete()\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<form>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputId\">Id</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"product.id\" disabled>\n      </div>\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputName\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"inputName\" [(ngModel)]=\"product.name\" (input)=\"nameChanged($event.target.value)\" placeholder=\"Enter Name here\">\n      </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"selectType\">Select Type</label>\n            <select [(ngModel)]=\"selectedType\" name=\"selectType\" class=\"form-control\" (ngModelChange)=\"typeSelected()\">\n              <option [ngValue]=\"undefined\">Please select a type</option>\n              <option [ngValue]=\"type\" *ngFor=\"let type of types\">\n                {{ type }}\n              </option>\n            </select>\n          </div>\n        <div class=\"form-group col-md-6\">\n          <label for=\"inputType\">Type</label>\n          <input type=\"text\" class=\"form-control\" id=\"inputType\" name=\"inputType\" [(ngModel)]=\"product.type\" disabled>\n        </div>\n      </div>\n</form>","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ProductDefaultComponent} from './product-default/product-default.component';\r\nimport {ProductComponent} from './product/product.component';\r\n\r\nimport {ProductsComponent} from './products/products.component';\r\nimport {ProductResolverService} from './route-resolvers/product-resolver.service';\r\nimport {ProductsResolverService} from './route-resolvers/products-resolver.service';\r\nimport {AuthGuardService} from '../core/user/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    canActivate: [AuthGuardService],\r\n    component: ProductsComponent,\r\n    resolve: {products: ProductsResolverService},\r\n    children: [\r\n      {path: ':prodId', resolve: {product: ProductResolverService}, component: ProductComponent},\r\n      {path: '', component: ProductDefaultComponent}\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductsRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductsRoutingModule } from './products-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { ProductComponent } from './product/product.component';\nimport { ProductDefaultComponent } from './product-default/product-default.component';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\n\n\n\n@NgModule({\n  declarations: [ProductsComponent, ProductComponent, ProductDefaultComponent],\n  imports: [\n    ProductsRoutingModule,\n    SharedModule,\n    NgbDropdownModule\n  ]\n})\nexport class ProductsModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { faProductHunt } from '@fortawesome/free-brands-svg-icons';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MenuItem } from 'src/app/shared/side-bar/model/menu-item.model';\r\nimport { Product } from '../shared/models/product.model';\r\n\r\n@Component({\r\n  selector: 'emes-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.scss']\r\n})\r\nexport class ProductsComponent implements OnInit, OnDestroy {\r\n\r\n  menuItems: MenuItem[];\r\n\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe((data: {products: Product[]}) =>{\r\n      this.menuItems = data.products.map(p => ({\r\n        id: p.id,\r\n        icon: faProductHunt,\r\n        label: p.name,\r\n        route: [p.id],\r\n        children: []\r\n      }));\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid h-100 px-0\">\n    <div class=\"row h-100 no-gutters\">\n        <emes-side-bar class=\"col-md-3 col-lg-2 d-none d-md-block bg-light\" [header]=\"'Product'\" [menuItems]=\"menuItems\"></emes-side-bar>\n\n        <main class=\"col d-flex flex-column\">\n            <router-outlet></router-outlet>\n        </main>\n\n    </div>\n</div>","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Product} from '../shared/models/product.model';\r\nimport {ProductService} from '../shared/product.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductResolverService {\r\n\r\n  constructor(private productService: ProductService, private router: Router) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Product> {\r\n    const id = route.paramMap.get('prodId');\r\n    return this.productService.getProduct(id as string);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Product } from '../shared/models/product.model';\nimport { ProductService } from '../shared/product.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsResolverService {\n\n  constructor(private productService: ProductService, private router: Router) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Product[]> {\n    \n    return this.productService.getProducts();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Product } from './models/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor() { }\n\n  products: Product[] = [\n    {\n      id: '821c6f60-c7b5-4090-ad6a-0cd25cd4cdfb',\n      name: 'Corn',\n      type: 'Raw'\n    },\n    {\n      id: 'fdcacb5c-89fc-424a-9554-0c78612e708e',\n      name: 'Niacin',\n      type: 'Raw'\n    },\n    {\n      id: '0bd3f335-2fbe-4bb6-ac59-22baecf8afe8',\n      name: 'Vitamin C',\n      type: 'Raw'\n    },\n    {\n      id: '799d0452-40f9-4089-8611-02344e878941',\n      name: 'Vitamin D',\n      type: 'Raw'\n    },\n    {\n      id: '6e386b40-9684-4ebd-be32-8f4d8ddcb650',\n      name: 'Product1',\n      type: 'Finished Product'\n    },\n    {\n      id: 'e7dcecae-b6b7-486f-b9df-e6e638d4e98b',\n      name: 'Semi product1',\n      type: 'Semi-Product'\n    }\n  ];\n\n  getProduct(id: string): Observable<Product> {\n    return of(this.products.find(p => p.id === id));\n  }\n\n  getProducts(): Observable<Product[]> {\n    return of(this.products);\n  }\n\n  \n}\n"]}