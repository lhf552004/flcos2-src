{"version":3,"sources":["./src/app/profile/profile-routing.module.ts","./src/app/profile/profile.module.ts","./src/app/profile/profile/profile.component.ts","./src/app/profile/profile/profile.component.html","./src/app/profile/route-resolvers/user-resolver.service.ts"],"names":[],"mappings":"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","file":"profile-profile-module-es2015.js","sourcesContent":["import {RouterModule, Routes} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {UserResolverService} from './route-resolvers/user-resolver.service';\r\n\r\nconst routes: Routes = [{ path: '', component: ProfileComponent, resolve: {user: UserResolverService} }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport {ProfileRoutingModule} from './profile-routing.module';\r\nimport {AngularMaterialModule} from '../angular-material-module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ProfileComponent],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MatInputModule,\r\n    AngularMaterialModule,\r\n    ProfileRoutingModule\r\n  ]\r\n})\r\nexport class ProfileModule { }\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\r\nimport {Subject} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {AuthenticationService} from '../../core/user/authentication.service';\r\nimport {User} from '../../core/user/models/user.model';\r\nimport {UserService} from '../../core/user/user.service';\r\nimport {NotificatorService} from '../../core/notificator/notificator.service';\r\nimport {Notification} from '../../core/notificator/notification.model';\r\nimport {Job} from '../../lines/jobs/shared/models/job.model';\r\n\r\n@Component({\r\n  selector: 'emes-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit, OnDestroy {\r\n  hide = true;\r\n  currentUser: User;\r\n  lastName: string;\r\n  firstName: string;\r\n  isInfoEdited = false;\r\n  isPasswordChanged = false;\r\n  minPw = 5;\r\n  formGroup: FormGroup;\r\n  passwordText: string;\r\n  firstNameText: string;\r\n  lastNameText: string;\r\n  // Used for cleaning subscription\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private userService: UserService,\r\n              private authenticationService: AuthenticationService,\r\n              private formBuilder: FormBuilder,\r\n              private notificatorService: NotificatorService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const passwordMatchValidator: ValidatorFn = (formGroup: FormGroup): ValidationErrors | null => {\r\n      if (formGroup.get('password').value === formGroup.get('password2').value) {\r\n        return null;\r\n      } else {\r\n        return {passwordMismatch: true};\r\n      }\r\n    };\r\n    this.formGroup = this.formBuilder.group({\r\n      password: ['', [Validators.required, Validators.minLength(this.minPw)]],\r\n      password2: ['', [Validators.required]]\r\n    }, {validator: passwordMatchValidator});\r\n\r\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe((data: { user: User }) => {\r\n      if (data.user != null) {\r\n        this.currentUser = data.user;\r\n      }\r\n    });\r\n\r\n    this.authenticationService.currentUser.pipe(takeUntil(this.unsubscribe)).subscribe(user => {\r\n      if (user == null) {\r\n        this.router.navigate(['/']);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  save(): void {\r\n    this.currentUser.password = '';\r\n    this.userService.updateUser(this.currentUser.id, this.currentUser, true).pipe(takeUntil(this.unsubscribe)).subscribe(x => {\r\n      this.notificatorService.sendNotification(new Notification('Update profile successfully!', 'info'));\r\n    });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  changePassword(): void {\r\n    this.userService.updateUser(this.currentUser.id, this.currentUser, false).pipe(takeUntil(this.unsubscribe)).subscribe(x => {\r\n      this.notificatorService.sendNotification(new Notification('Change password successfully!', 'info'));\r\n    });\r\n  }\r\n\r\n  infoChanged(): void {\r\n    if (this.currentUser.lastName === '' || this.currentUser.firstName === '') {\r\n      this.isInfoEdited = false;\r\n    } else {\r\n      this.isInfoEdited = true;\r\n    }\r\n  }\r\n\r\n  get password() {\r\n    return this.formGroup.get('password');\r\n  }\r\n\r\n  get password2() {\r\n    return this.formGroup.get('password2');\r\n  }\r\n\r\n  /* Called on each input in either password field */\r\n  onPasswordInput(): void {\r\n    if (this.formGroup.hasError('passwordMismatch')) {\r\n      this.password2.setErrors([{passwordMismatch: true}]);\r\n      this.isPasswordChanged = false;\r\n    } else {\r\n      this.password2.setErrors(null);\r\n      this.isPasswordChanged = true;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid d-flex flex-column\">\r\n  <div class=\"container\">\r\n    <h3>Profile</h3>\r\n  </div>\r\n</div>\r\n\r\n<section>\r\n  <div class=\"container\">\r\n    <div class=\"card-deck\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-text\">Basic Info</h5>\r\n          <mat-form-field hintLabel=\"Max 10 characters\" appearance=\"fill\">\r\n            <mat-label>Enter Your Last Name</mat-label>\r\n            <input matInput #lastName [(ngModel)]=\"currentUser.lastName\" (input)=\"infoChanged()\" maxlength=\"10\" placeholder=\"Ex. Nougat\">\r\n            <mat-hint align=\"end\">{{lastName.value?.length || 0}}/10</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field hintLabel=\"Max 10 characters\" appearance=\"fill\">\r\n            <mat-label>Enter Your First Name</mat-label>\r\n            <input matInput #firstName [(ngModel)]=\"currentUser.firstName\" (input)=\"infoChanged()\" maxlength=\"10\" placeholder=\"Ex. Nougat\">\r\n            <mat-hint align=\"end\">{{firstName.value?.length || 0}}/10</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field hintLabel=\"Max 10 characters\" appearance=\"fill\">\r\n            <mat-label>Enter Your Email</mat-label>\r\n            <input matInput #firstName [(ngModel)]=\"currentUser.email\" (input)=\"infoChanged()\" maxlength=\"10\" placeholder=\"Ex. Nougat\">\r\n            <mat-hint align=\"end\">{{firstName.value?.length || 0}}/10</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <button [disabled]=\"!isInfoEdited\" mat-button color=\"primary\" (click)=\"save()\">Save</button>\r\n          <button mat-button color=\"primary\" (click)=\"cancel()\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<section>\r\n  <div class=\"container\">\r\n    <div class=\"card-deck\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-text\">Change Password</h5>\r\n          <form [formGroup]=\"formGroup\">\r\n            <mat-form-field>\r\n              <input matInput type=\"password\" [(ngModel)]=\"currentUser.password\" [type]=\"hide ? 'password' : 'text'\" placeholder=\"Password\"\r\n                     formControlName=\"password\" (input)=\"onPasswordInput()\">\r\n              <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n                      [attr.aria-pressed]=\"hide\">\r\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n              </button>\r\n              <mat-error *ngIf=\"password.hasError('required')\">Password is required</mat-error>\r\n              <mat-error *ngIf=\"password.hasError('minlength')\">Password must have at least {{minPw}}characters\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n              <input matInput type=\"password\" [type]=\"hide ? 'password' : 'text'\" placeholder=\"Confirm password\"\r\n                     formControlName=\"password2\" (input)=\"onPasswordInput()\">\r\n              <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\r\n                      [attr.aria-pressed]=\"hide\">\r\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n              </button>\r\n              <mat-error *ngIf=\"password2.hasError('required')\">Please confirm your password</mat-error>\r\n              <mat-error *ngIf=\"password2.invalid && !password2.hasError('required')\">Passwords don't match</mat-error>\r\n            </mat-form-field>\r\n          </form>\r\n          <button mat-button [disabled]=\"!isPasswordChanged\" color=\"primary\" (click)=\"changePassword()\">Save</button>\r\n          <button mat-button color=\"primary\" (click)=\"cancel()\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Injectable } from '@angular/core';\r\nimport {ProductService} from '../../products/shared/product.service';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Product} from '../../products/shared/models/product.model';\r\nimport {UserService} from '../../core/user/user.service';\r\nimport {User} from '../../core/user/models/user.model';\r\nimport {AuthenticationService} from '../../core/user/authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserResolverService {\r\n\r\n  constructor(private userService: UserService, private authenticationService: AuthenticationService, private router: Router) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<User> {\r\n    const id = this.authenticationService.currentUserValue.id;\r\n    return this.userService.getUser(id as string);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}