{"version":3,"sources":["webpack:///src/app/lines/jobs/job-default/job-default.component.ts","webpack:///src/app/lines/jobs/job-default/job-default.component.html","webpack:///src/app/lines/jobs/job/job.component.ts","webpack:///src/app/lines/jobs/job/job.component.html","webpack:///src/app/lines/jobs/jobs-routing.module.ts","webpack:///src/app/lines/jobs/jobs.module.ts","webpack:///src/app/lines/jobs/jobs/jobs.component.ts","webpack:///src/app/lines/jobs/jobs/jobs.component.html","webpack:///src/app/lines/jobs/route-resolvers/job-resolver.service.ts","webpack:///src/app/lines/jobs/route-resolvers/jobs-resolver.service.ts","webpack:///src/app/lines/jobs/shared/job.service.ts"],"names":["JobDefaultComponent","selector","templateUrl","styleUrls","JobComponent","route","faEllipsisV","types","isAuthor","isOwner","unsubscribe","data","pipe","subscribe","job","bom","ingredents","forEach","i","targetWeight","percent","console","log","next","complete","close","$event","nameChanged","routes","path","component","resolve","jobs","JobsRoutingModule","forChild","imports","exports","JobsModule","declarations","JobsComponent","JobResolverService","jobService","router","state","id","paramMap","get","getJob","providedIn","JobsResolverService","lineId","parent","getJobs","JobService","name","lineName","actualWeight","isTemplate","materialId","materialName","find","j","filter"],"mappings":"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","file":"jobs-jobs-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'emes-job-default',\n  templateUrl: './job-default.component.html',\n  styleUrls: ['./job-default.component.scss']\n})\nexport class JobDefaultComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>job-default works!</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { faEllipsisV, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Job } from '../shared/models/job.model';\n\n@Component({\n  selector: 'emes-job',\n  templateUrl: './job.component.html',\n  styleUrls: ['./job.component.scss']\n})\nexport class JobComponent implements OnInit, OnDestroy {\n\n  // Icon\n  faEllipsisV: IconDefinition = faEllipsisV;\n\n  // Current job\n  job: Job;\n\n  // Product type\n  types: any[] = ['Raw', 'Finished Product', 'Semi-Product'];\n\n  // Selected type\n  selectedType: any;\n  \n  // Indicator whether it is a author\n  isAuthor: boolean = true;\n  // Indicator whether it is a owner\n  isOwner: boolean = true;\n  \n  // Used for cleaning subscription \n  unsubscribe: Subject<void> = new Subject();\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\n      if (data.job){\n        this.job = data.job;\n        if(this.job.bom)\n          this.job.bom.ingredents.forEach(i => {\n            i.targetWeight = i.percent * this.job.targetWeight\n          })\n      }\n        \n      console.log(this.job)\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  save(close: boolean) {\n\n  }\n\n  close() {\n\n  }\n\n  copy() {\n\n  }\n\n  delete() {\n\n  }\n\n  typeSelected() {\n\n  }\n\n  nameChanged($event) {\n\n  }\n\n  start() {\n\n  }\n\n  pause() {\n\n  }\n\n  stop() {\n\n  }\n}\n","<div class=\"container-fluid d-flex flex-column\">\n    <div class=\"row justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <div class=\"col-auto\">\n            <h2>\n                Job Management\n            </h2>\n        </div>\n\n        <div class=\"col-auto\">\n            <div class=\"btn-toolbar mb-2 mb-md-0\">\n                <button *ngIf=\"job.state !== 'started'\" type=\"button\" class=\"btn btn-sm btn-danger mr-2\" (click)=\"start()\">Start</button>\n                <button *ngIf=\"job.state === 'started'\" type=\"button\" class=\"btn btn-sm btn-danger mr-2\" (click)=\"pause()\">Start</button>\n                <button *ngIf=\"job.state === 'started'\" type=\"button\" class=\"btn btn-sm btn-danger mr-2\" (click)=\"stop()\">Stop</button>\n                <div *ngIf=\"isAuthor\" class=\"btn-group mr-2\">\n                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"save(false)\">Save</button>\n                    <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\n                        <button class=\"btn btn-sm btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button ngbDropdownItem (click)=\"save(false)\">Save</button>\n                            <button ngbDropdownItem (click)=\"save(true)\">Save & Close</button>\n                        </div>\n                    </div>\n                </div>\n\n                <button type=\"button\" class=\"btn btn-sm btn-secondary mr-2\" (click)=\"close()\">Close</button>\n\n                <div class=\"btn-group mr-2\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" class=\"btn btn-sm btn-link dropdown-icon\" ngbDropdownToggle>\n                        <fa-icon class=\"text-primary pointer\" [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\n                    </button>\n                    <div class=\"dropdown-menu\" ngbDropdownMenu>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"save(true)\">Save</button>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"close()\">Save & Close</button>\n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"copy()\">Copy</button>   \n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"delete()\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<form>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputId\">Id</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"job.id\" disabled>\n      </div>\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputName\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"inputName\" [(ngModel)]=\"job.name\" (input)=\"nameChanged($event.target.value)\" placeholder=\"Enter Name here\">\n      </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputLine\">Line</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputLine\" name=\"inputLine\" [(ngModel)]=\"job.lineName\" disabled>\n        </div>\n        <div class=\"form-group col-md-6\">\n          <label for=\"inputTargetWeight\">Target Weight</label>\n          <input type=\"text\" class=\"form-control\" id=\"inputTargetWeight\" name=\"inputTargetWeight\" [(ngModel)]=\"job.targetWeight\">\n        </div>\n      </div>\n</form>\n\n<h3>BOM</h3>\n<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Line</th>\n        <th scope=\"col\">Weight</th>\n      </tr>\n    </thead>\n    <tbody *ngIf=\"job.bom\">\n      <tr *ngFor=\"let ingredent of job.bom.ingredents; let i = index\">\n        <th scope=\"row\">{{i}}</th>\n        <td>{{ingredent.id}}</td>\n        <td>{{ingredent.materialName}}</td>\n        <td>{{ingredent.percent*100}}%</td>\n        <td>{{ingredent.targetWeight}}</td>\n      </tr>\n    </tbody>\n  </table>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { JobDefaultComponent } from './job-default/job-default.component';\r\nimport { JobComponent } from './job/job.component';\r\nimport { JobsComponent } from './jobs/jobs.component';\r\nimport { JobResolverService } from './route-resolvers/job-resolver.service';\r\nimport { JobsResolverService } from './route-resolvers/jobs-resolver.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: JobsComponent, resolve: {jobs: JobsResolverService}\r\n    },\r\n    { path: ':jobId', resolve: {job: JobResolverService}, component: JobComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class JobsRoutingModule { }","import { NgModule } from '@angular/core';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { JobComponent } from './job/job.component';\nimport { JobDefaultComponent } from './job-default/job-default.component';\nimport { JobsRoutingModule } from './jobs-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [JobsComponent, JobComponent, JobDefaultComponent],\n  imports: [\n    JobsRoutingModule,\n    SharedModule,\n    NgbDropdownModule\n  ]\n})\nexport class JobsModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Job } from '../shared/models/job.model';\r\n\r\n@Component({\r\n  selector: 'emes-jobs',\r\n  templateUrl: './jobs.component.html',\r\n  styleUrls: ['./jobs.component.scss']\r\n})\r\nexport class JobsComponent implements OnInit, OnDestroy {\r\n\r\n  jobs: Job[];\r\n\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe((data: {jobs: Job[]}) =>{\r\n      this.jobs = data.jobs;\r\n      console.log(this.jobs)\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n}\r\n","<h3>Jobs</h3>\n<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Line</th>\n        <th scope=\"col\">Weight</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let job of jobs; let i = index\">\n        <th scope=\"row\">{{i}}</th>\n        <td><a [routerLink]=\"[job.id]\">{{job.id}}</a></td>\n        <td>{{job.name}}</td>\n        <td>{{job.lineName}}</td>\n        <td>{{job.targetWeight}}</td>\n      </tr>\n    </tbody>\n  </table>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Job } from '../shared/models/job.model';\nimport { JobService } from '../shared/job.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobResolverService {\n\n  constructor(private jobService: JobService, private router: Router) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Job> {\n    const id = route.paramMap.get('jobId');\n    return this.jobService.getJob(id as string);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Job } from '../shared/models/job.model';\nimport { JobService } from '../shared/job.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobsResolverService {\n\n  constructor(private jobService: JobService, private router: Router) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Job[]> {\n    const lineId = route.parent.parent.paramMap.get('lineId');\n    return this.jobService.getJobs(lineId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Job } from './models/job.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService {\n\n  jobs: Job[] = [\n    {\n      id: '821c6f60-c7b5-4090-ad6a-0cd25cd4cdfb',\n      name: 'INT1:000001',\n      lineId: '252558f9-c2a8-4f7d-b607-ff02dc1e6c4c',\n      lineName: 'INT1',\n      actualWeight: 3000,\n      targetWeight: 3100,\n      state: 'created'\n    },\n    {\n      id: '6e386b40-9684-4ebd-be32-8f4d8ddcb650',\n      name: 'INT2:000001',\n      lineId: '5bcdc28b-fc29-4d4e-a6c3-e15866531989',\n      lineName: 'INT2',\n      actualWeight: 5000,\n      targetWeight: 5100,\n      state: 'created'\n    },\n    {\n      id: 'e7dcecae-b6b7-486f-b9df-e6e638d4e98b',\n      name: 'MIX1:000001',\n      lineId: '844660ac-7ec5-4819-887d-00dae25676e6',\n      lineName: 'MIX1',\n      actualWeight: 3000,\n      targetWeight: 3100,\n      state: 'created',\n      bom: {id: 'ffbdd6c6-0b1f-47c5-8316-c8aa60f4e082', name: '', isTemplate: false, ingredents: [{\n        id: 'c3587775-4188-42f1-a9b2-7045b2013804',\n        name: '',\n        materialId: '821c6f60-c7b5-4090-ad6a-0cd25cd4cdfb',\n        materialName: 'Corn',\n        targetWeight: 0,\n        actualWeight: 0,\n        percent: .75\n      },\n      {\n        id: 'd657f387-2b40-4c98-89cd-6fdf30f81d1e',\n        name: '',\n        materialId: '0bd3f335-2fbe-4bb6-ac59-22baecf8afe8',\n        materialName: 'Vitamin C',\n        targetWeight: 0,\n        actualWeight: 0,\n        percent: .05\n      },\n      {\n        id: '2dac15cf-9192-4b4b-a206-48541b664980',\n        name: '',\n        materialId: '799d0452-40f9-4089-8611-02344e878941',\n        materialName: 'Vitamin D',\n        targetWeight: 0,\n        actualWeight: 0,\n        percent: .05\n      },\n      {\n        id: '1eef7c9d-286c-4bae-bd95-c55dd9692a15',\n        name: '',\n        materialId: 'fdcacb5c-89fc-424a-9554-0c78612e708e',\n        materialName: 'Niacin',\n        targetWeight: 0,\n        actualWeight: 0,\n        percent: .15\n      }\n      \n    ]}\n    }\n  ];\n\n  constructor() { }\n\n  getJob(id: string): Observable<Job> {\n    return of(this.jobs.find(j => j.id === id));\n  }\n\n  getJobs(lineId: string): Observable<Job[]> {\n    return of(this.jobs.filter(j => j.lineId === lineId));\n  }\n}"]}