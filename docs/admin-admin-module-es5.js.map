{"version":3,"sources":["webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/admin/admin.component.ts","webpack:///src/app/admin/admin/admin.component.html","webpack:///src/app/admin/menus/menus.component.ts","webpack:///src/app/admin/menus/menus.component.html","webpack:///src/app/admin/roles-selector/roles-selector.component.ts","webpack:///src/app/admin/roles-selector/roles-selector.component.html","webpack:///src/app/admin/roles/roles.component.ts","webpack:///src/app/admin/roles/roles.component.html","webpack:///src/app/admin/route-resolvers/menus-resolver.service.ts","webpack:///src/app/admin/route-resolvers/roles-resolver.service.ts","webpack:///src/app/admin/route-resolvers/users-resolver.service.ts","webpack:///src/app/admin/user-viewer/user-viewer.component.ts","webpack:///src/app/admin/user-viewer/user-viewer.component.html","webpack:///src/app/admin/users/users.component.ts","webpack:///src/app/admin/users/users.component.html","webpack:///src/app/core/user/role.service.ts"],"names":["routes","path","component","children","resolve","users","roles","menus","AdminRoutingModule","forChild","imports","exports","AdminModule","declarations","AdminComponent","faUsers","faUserTag","faBars","faSitemap","selector","templateUrl","styleUrls","MenusComponent","roleService","menuService","dynamicFormService","isAdmin","closeResult","unsubscribe","columnDefinition","id","name","label","type","visible","searchable","filterMode","click","viewMenu","bind","deleteMenu","allMenus$","pipe","subscribe","settings","selectableRows","columnDefinitions","data","map","t","roleName","role","view","toolBar","right","icon","callback","createMenu","groupBy","next","complete","config","headerText","submitText","closeText","onSubmit","e","doCreateMenu","onDismiss","extraButtons","fields","placeholder","validation","required","options","roles$","getValue","x","key","value","popDynamicFormModal","newMenu","menu","doUpdateMenu","url","update","doDelete","notifications","popNotification","RolesSelectorComponent","submitted","dismissed","roleSelected","selectedRoles","buildTableSettings","r","left","selectRoles","rows","filter","includes","length","method","emit","dismissForm","submitForm","RolesComponent","viewRole","deleteRole","createRole","doCreateRole","create","doRename","newName","rename","MenusResolverService","router","route","state","getMenus","providedIn","RolesResolverService","getRoles","UsersResolverService","userService","getUsers","UserViewerComponent","addedRoles","removedRoles","user","firstName","lastName","removeRole","g","removeRoles","addRole","selectedRoleIds","doAddRole","popModal","push","updateUser","error","indexs","findIndex","forEach","idx","splice","row","doRemoveRoles","join","u","idx2","UsersComponent","viewUser","deleteUser","users$","createUser","doCreateUser","changes","processChanges","RoleService","http","roleUrl","baseUrl","theRole","find"],"mappings":"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","file":"admin-admin-module-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {UsersComponent} from './users/users.component';\r\nimport {AdminComponent} from './admin/admin.component';\r\nimport {RolesComponent} from './roles/roles.component';\r\nimport {MenusComponent} from './menus/menus.component';\r\nimport {UsersResolverService} from './route-resolvers/users-resolver.service';\r\nimport {RolesResolverService} from './route-resolvers/roles-resolver.service';\r\nimport {MenusResolverService} from './route-resolvers/menus-resolver.service';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '', component: AdminComponent, children: [\r\n    {path: 'users', component: UsersComponent, resolve: {users: UsersResolverService}},\r\n    {path: 'roles', component: RolesComponent, resolve: {roles: RolesResolverService}},\r\n    {path: 'menus', component: MenusComponent, resolve: {menus: MenusResolverService, roles: RolesResolverService}}\r\n  ]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {UsersComponent} from './users/users.component';\r\nimport {AdminRoutingModule} from './admin-routing.module';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {RolesComponent} from './roles/roles.component';\r\nimport {MenusComponent} from './menus/menus.component';\r\nimport {AdminComponent} from './admin/admin.component';\r\nimport {UserViewerComponent} from './user-viewer/user-viewer.component';\r\nimport {RolesSelectorComponent} from './roles-selector/roles-selector.component';\r\n\r\n@NgModule({\r\n  declarations: [UsersComponent, RolesComponent, MenusComponent, AdminComponent, UserViewerComponent, RolesSelectorComponent],\r\n  imports: [\r\n    SharedModule,\r\n    AdminRoutingModule\r\n  ]\r\n})\r\nexport class AdminModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IconDefinition, faUsers, faList, faLock, faSitemap, faUserTag, faBars} from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'emes-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  // Icons\r\n  faUsers: IconDefinition = faUsers;\r\n  faUserTag: IconDefinition = faUserTag;\r\n  faBars: IconDefinition = faBars;\r\n  faSitemap: IconDefinition = faSitemap;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid h-100 d-flex pr-0\">\r\n  <div class=\"row flex-fill\">\r\n    <div class=\"col-2 border-right gray-200-background pt-2\">\r\n\r\n      <ul class=\"nav flex-column\">\r\n        <li class=\"nav-item d-flex justify-content-between\">\r\n          <a class=\"nav-link\">\r\n            <span class=\"text-capitalize font-weight-bold\">Settings</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"dropdown-divider gray-500-border-top mx-n3\"></li>\r\n\r\n        <li class=\"nav-item d-flex justify-content-between\">\r\n          <a class=\"nav-link pointer\" [routerLink]=\"'users'\" routerLinkActive=\"active\">\r\n            <fa-icon [icon]=\"faUsers\" [fixedWidth]=\"true\"></fa-icon> Users\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"nav-item d-flex justify-content-between\">\r\n          <a class=\"nav-link pointer\" [routerLink]=\"'roles'\" routerLinkActive=\"active\">\r\n            <fa-icon [icon]=\"faUserTag\" [fixedWidth]=\"true\"></fa-icon> Roles\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item d-flex justify-content-between\">\r\n          <a class=\"nav-link pointer\" [routerLink]=\"'menus'\" routerLinkActive=\"active\">\r\n            <fa-icon [icon]=\"faBars\" [fixedWidth]=\"true\"></fa-icon> Menus\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"col d-flex\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, OnDestroy} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {faExternalLinkAlt, faPlus, faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport {DataTableColumnDefinition, DataTableSettings, DataTableToolbarControl} from 'data-table';\r\nimport {DynamicFormService, ModalConfig, CustomValidators} from 'dynamic-form';\r\nimport {MenuService} from '../../core/layout/menu/menu.service';\r\nimport {RoleService} from '../../core/user/role.service';\r\nimport {MenuItem} from '../../core/layout/menu/menu-item';\r\nimport {Role} from '../../core/user/models/role.model';\r\nimport {ModalDismissReasons, NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {UserViewerComponent} from '../user-viewer/user-viewer.component';\r\n\r\n@Component({\r\n  selector: 'emes-menus',\r\n  templateUrl: './menus.component.html',\r\n  styleUrls: ['./menus.component.scss']\r\n})\r\nexport class MenusComponent implements OnInit, OnDestroy {\r\n  settings: DataTableSettings;\r\n  // Indicator whether current user is admin\r\n  isAdmin = true;\r\n  closeResult = '';\r\n  // Used for cleaning subscription\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private roleService: RoleService,\r\n              private menuService: MenuService,\r\n              private dynamicFormService: DynamicFormService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const columnDefinition: DataTableColumnDefinition[] = [\r\n      {id: '1', name: 'id', label: 'Id', type: 'text', visible: true, searchable: false, filterMode: 'none'},\r\n      {id: '2', name: 'name', label: 'Name', type: 'text', visible: true, searchable: false, filterMode: 'text'},\r\n      {id: '3', name: 'url', label: 'Url', type: 'text', visible: true, searchable: false, filterMode: 'text'},\r\n      {id: '4', name: 'roleName', label: 'Role', type: 'text', visible: true, searchable: false, filterMode: 'text'},\r\n      {\r\n        id: '4',\r\n        name: 'view',\r\n        label: 'View',\r\n        type: 'icon',\r\n        visible: true,\r\n        searchable: false,\r\n        filterMode: 'none',\r\n        click: this.viewMenu.bind(this)\r\n      },\r\n      {\r\n        id: '5',\r\n        name: 'delete',\r\n        label: 'Delete',\r\n        type: 'icon',\r\n        visible: true,\r\n        searchable: false,\r\n        filterMode: 'none',\r\n        click: this.deleteMenu.bind(this)\r\n      },\r\n    ];\r\n    this.menuService.allMenus$.pipe(takeUntil(this.unsubscribe)).subscribe(users => {\r\n      this.settings = {\r\n        selectableRows: false,\r\n        columnDefinitions: columnDefinition,\r\n        data: users.map(t => ({...t, roleName: t.role?.name, view: faExternalLinkAlt, delete: faTrash})),\r\n        toolBar: {\r\n          right: [\r\n            ...this.isAdmin ? [{\r\n              name: 'New Menu',\r\n              type: 'button',\r\n              icon: faPlus,\r\n              callback: this.createMenu.bind(this)\r\n            } as DataTableToolbarControl] : [],\r\n            {type: 'filter'} as DataTableToolbarControl\r\n          ]\r\n        },\r\n        groupBy: []\r\n      };\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  createMenu() {\r\n    const config: ModalConfig = {\r\n      headerText: 'Create a menu',\r\n      submitText: 'OK',\r\n      closeText: 'Cancel',\r\n      onSubmit: (e: { name: string, url: string, role: Role }) => this.doCreateMenu(e),\r\n      onDismiss: (e: string) => {\r\n      },\r\n      extraButtons: [],\r\n      fields: [\r\n        {\r\n          type: 'input',\r\n          label: 'Name',\r\n          name: 'name',\r\n          placeholder: 'Enter the menu name',\r\n          validation: [\r\n            CustomValidators.required('Name required'),\r\n          ]\r\n        }, {\r\n          type: 'input',\r\n          label: 'Url',\r\n          name: 'url',\r\n          placeholder: 'Enter the url',\r\n          validation: [\r\n            CustomValidators.required('Url required'),\r\n          ]\r\n        }, {\r\n          type: 'select',\r\n          label: 'Role',\r\n          name: 'role',\r\n          options: this.roleService.roles$.getValue().map(x => ({key: x, value: x.name})),\r\n          placeholder: 'Choose existed Sprint Scenario',\r\n          validation: []\r\n        }\r\n      ]\r\n    };\r\n    this.dynamicFormService.popDynamicFormModal(config);\r\n  }\r\n\r\n  doCreateMenu(newMenu: { name: string, url: string, role: Role }): void {\r\n    this.menuService.createMenu(newMenu).pipe(takeUntil(this.unsubscribe)).subscribe();\r\n  }\r\n\r\n  viewMenu(menu: MenuItem) {\r\n    const config: ModalConfig = {\r\n      headerText: 'View a menu',\r\n      submitText: 'OK',\r\n      closeText: 'Cancel',\r\n      onSubmit: (e: { name: string, url: string, role: Role }) => this.doUpdateMenu(menu.id, e),\r\n      onDismiss: (e: string) => {\r\n      },\r\n      extraButtons: [],\r\n      fields: [\r\n        {\r\n          type: 'input',\r\n          label: 'Name',\r\n          name: 'name',\r\n          value: menu.name,\r\n          placeholder: 'Enter the menu name',\r\n          validation: [\r\n            CustomValidators.required('Name required'),\r\n          ]\r\n        }, {\r\n          type: 'input',\r\n          label: 'Url',\r\n          name: 'url',\r\n          value: menu.url,\r\n          placeholder: 'Enter the url',\r\n          validation: [\r\n            CustomValidators.required('Url required'),\r\n          ]\r\n        }, {\r\n          type: 'select',\r\n          label: 'Role',\r\n          name: 'role',\r\n          value: menu.role?.name,\r\n          options: this.roleService.roles$.getValue().map(x => ({key: x, value: x.name})),\r\n          placeholder: 'Choose a role',\r\n          validation: []\r\n        }\r\n      ]\r\n    };\r\n    this.dynamicFormService.popDynamicFormModal(config);\r\n  }\r\n\r\n  doUpdateMenu(id: string, menu: { name: string, url: string, role: Role }): void {\r\n    this.menuService.update(id, menu).pipe(takeUntil(this.unsubscribe)).subscribe();\r\n  }\r\n\r\n  deleteMenu(menu: MenuItem) {\r\n    const config = {\r\n      headerText: 'Confirm Delete Menu.',\r\n      submitText: 'Ok',\r\n      closeText: 'Cancel',\r\n      onSubmit: () => this.doDelete(menu),\r\n      onDismiss: () => {\r\n      },\r\n      notifications: [`Are you Sure you want to delete menu '${menu.name}'?`]\r\n    };\r\n    this.dynamicFormService.popNotification(config);\r\n  }\r\n\r\n  doDelete(menu: MenuItem) {\r\n    this.menuService.delete(menu.id).pipe(takeUntil(this.unsubscribe)).subscribe(x => {\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n  <h2>{{'ADMIN.MENUS' | translate}}</h2>\r\n</div>\r\n<csps-data-table [settings]=\"settings\" class=\"d-flex flex-fill\"></csps-data-table>\r\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {Role} from '../../core/user/models/role.model';\r\nimport {DataTableSettings, DataTableColumnDefinition, DataTableToolbarControl} from 'data-table';\r\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'emes-roles-selector',\r\n  templateUrl: './roles-selector.component.html',\r\n  styleUrls: ['./roles-selector.component.scss']\r\n})\r\nexport class RolesSelectorComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() config: { roles: Role[] };\r\n\r\n  @Output()\r\n  submitted: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  dismissed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // Indicate roles selected\r\n  roleSelected = false;\r\n\r\n  // The datatable settings\r\n  settings: DataTableSettings;\r\n\r\n  // The list of group members, name and description of the group.\r\n  // A deep copy of the config.group object is needed in case user decide to cancel the form\r\n  roles: Role[] = [];\r\n\r\n  selectedRoles: Role[] = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.buildTableSettings();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n  buildTableSettings(): void {\r\n    this.roles = this.config.roles;\r\n    const columnDefinition: DataTableColumnDefinition[] = [\r\n      {id: '1', name: 'id', label: 'Id', type: 'text', visible: true, searchable: true, filterMode: 'none'},\r\n      {id: '2', name: 'name', label: 'Role name', type: 'text', visible: true, searchable: true, filterMode: 'select'}\r\n    ];\r\n\r\n    this.settings = {\r\n      selectableRows: true,\r\n      columnDefinitions: columnDefinition,\r\n      data: this.roles.map(r => ({...r, icon: faTrash})),\r\n      toolBar: {\r\n        left: [{name: 'Select', type: 'button', callback: this.selectRoles.bind(this)} as DataTableToolbarControl],\r\n        right: [{type: 'search'} as DataTableToolbarControl]\r\n      },\r\n      groupBy: []\r\n    };\r\n  }\r\n\r\n  selectRoles(rows: any[]) {\r\n    this.selectedRoles = this.roles.filter(r => rows.map(x => x.data.id).includes(r.id));\r\n    if (this.selectedRoles.length > 0) {\r\n      this.roleSelected = true;\r\n    } else {\r\n      this.roleSelected = false;\r\n    }\r\n  }\r\n\r\n  submitForm(method: string) {\r\n    this.submitted.emit(this.selectedRoles);\r\n  }\r\n\r\n  dismissForm(method: string) {\r\n    this.dismissed.emit(method);\r\n  }\r\n\r\n}\r\n","<div class=\"modal-content\">\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">Select Roles</h5>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissForm('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body d-flex flex-column\" style=\"height:60vh;\">\r\n    <csps-data-table [settings]=\"settings\" class=\"d-flex flex-fill\"></csps-data-table>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" (click)=\"dismissForm('Close button')\" class=\"btn btn-secondary\">Cancel</button>\r\n    <button type=\"button\" [disabled]=\"!roleSelected\" (click)=\"submitForm('OK')\" class=\"btn btn-primary\">Ok</button>\r\n  </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {DataTableColumnDefinition, DataTableSettings, DataTableToolbarControl} from 'data-table';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {faExternalLinkAlt, faPlus, faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport {RoleService} from '../../core/user/role.service';\r\nimport {Role} from '../../core/user/models/role.model';\r\nimport {DynamicFormService, ModalConfig, CustomValidators} from 'dynamic-form';\r\n\r\n@Component({\r\n  selector: 'emes-roles',\r\n  templateUrl: './roles.component.html',\r\n  styleUrls: ['./roles.component.scss']\r\n})\r\nexport class RolesComponent implements OnInit, OnDestroy {\r\n  settings: DataTableSettings;\r\n  // Indicator whether current user is admin\r\n  isAdmin = true;\r\n  // Used for cleaning subscription\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private roleService: RoleService, private dynamicFormService: DynamicFormService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const columnDefinition: DataTableColumnDefinition[] = [\r\n      {id: '1', name: 'id', label: 'Id', type: 'text', visible: true, searchable: true, filterMode: 'none'},\r\n      {id: '2', name: 'name', label: 'Name', type: 'text', visible: true, searchable: true, filterMode: 'text'},\r\n      {\r\n        id: '4',\r\n        name: 'view',\r\n        label: 'View',\r\n        type: 'icon',\r\n        visible: true,\r\n        searchable: false,\r\n        filterMode: 'none',\r\n        click: this.viewRole.bind(this)\r\n      },\r\n      {\r\n        id: '5',\r\n        name: 'delete',\r\n        label: 'Delete',\r\n        type: 'icon',\r\n        visible: true,\r\n        searchable: false,\r\n        filterMode: 'none',\r\n        click: this.deleteRole.bind(this)\r\n      },\r\n    ];\r\n    this.roleService.roles$.pipe(takeUntil(this.unsubscribe)).subscribe(users => {\r\n      this.settings = {\r\n        selectableRows: false,\r\n        columnDefinitions: columnDefinition,\r\n        data: users.map(t => ({...t, view: faExternalLinkAlt, delete: faTrash})),\r\n        toolBar: {\r\n          right: [\r\n            ...this.isAdmin ? [{\r\n              name: 'New Role',\r\n              type: 'button',\r\n              icon: faPlus,\r\n              callback: this.createRole.bind(this)\r\n            } as DataTableToolbarControl] : [],\r\n            {type: 'filter'} as DataTableToolbarControl\r\n          ]\r\n        },\r\n        groupBy: []\r\n      };\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  createRole() {\r\n    const config: ModalConfig = {\r\n      headerText: 'Create a role',\r\n      submitText: 'OK',\r\n      closeText: 'Cancel',\r\n      onSubmit: (e: { name: string }) => this.doCreateRole(e.name),\r\n      onDismiss: (e: string) => {\r\n      },\r\n      extraButtons: [],\r\n      fields: [\r\n        {\r\n          type: 'input',\r\n          label: 'Name',\r\n          name: 'name',\r\n          placeholder: 'Enter a role name',\r\n          validation: [\r\n            CustomValidators.required('Role name required'),\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n    this.dynamicFormService.popDynamicFormModal(config);\r\n  }\r\n\r\n  private doCreateRole(name: string): void {\r\n    this.roleService.create(name).pipe(takeUntil(this.unsubscribe)).subscribe();\r\n  }\r\n\r\n  viewRole(role: Role) {\r\n    const config: ModalConfig = {\r\n      headerText: 'Create a role',\r\n      submitText: 'OK',\r\n      closeText: 'Cancel',\r\n      onSubmit: (e: { name: string }) => this.doRename(role.id, e.name),\r\n      onDismiss: (e: string) => {\r\n      },\r\n      extraButtons: [],\r\n      fields: [\r\n        {\r\n          type: 'input',\r\n          label: 'Name',\r\n          name: 'name',\r\n          value: role.name,\r\n          placeholder: 'Enter a role name',\r\n          validation: [\r\n            CustomValidators.required('Role name required'),\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n    this.dynamicFormService.popDynamicFormModal(config);\r\n  }\r\n\r\n  private doRename(id: string, newName: string) {\r\n    this.roleService.rename(id, newName).pipe(takeUntil(this.unsubscribe)).subscribe();\r\n  }\r\n\r\n  deleteRole() {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n  <h2>{{'ADMIN.ROLES' | translate}}</h2>\r\n</div>\r\n<csps-data-table [settings]=\"settings\" class=\"d-flex flex-fill\"></csps-data-table>\r\n","import { Injectable } from '@angular/core';\r\nimport {RoleService} from '../../core/user/role.service';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Role} from '../../core/user/models/role.model';\r\nimport {MenuService} from '../../core/layout/menu/menu.service';\r\nimport {MenuItem} from '../../core/layout/menu/menu-item';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MenusResolverService {\r\n\r\n  constructor(private menuService: MenuService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<MenuItem[]> {\r\n    return this.menuService.getMenus();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {RoleService} from '../../core/user/role.service';\r\nimport {Role} from '../../core/user/models/role.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RolesResolverService {\r\n\r\n  constructor(private roleService: RoleService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Role[]> {\r\n    return this.roleService.getRoles();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BinService} from '../../bins/shared/bin.service';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Bin} from '../../bins/shared/models/bin.model';\r\nimport {UserService} from '../../core/user/user.service';\r\nimport {User} from '../../core/user/models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersResolverService {\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers();\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {DataTableSettings, DataTableColumnDefinition, DataTableToolbarControl} from 'data-table';\r\nimport {User} from '../../core/user/models/user.model';\r\nimport {Role} from '../../core/user/models/role.model';\r\nimport {faPlus, faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {UserService} from '../../core/user/user.service';\r\nimport {RolesSelectorComponent} from '../roles-selector/roles-selector.component';\r\nimport {RoleService} from '../../core/user/role.service';\r\nimport {DynamicFormService} from 'dynamic-form';\r\n\r\n@Component({\r\n  selector: 'emes-user-viewer',\r\n  templateUrl: './user-viewer.component.html',\r\n  styleUrls: ['./user-viewer.component.scss']\r\n})\r\nexport class UserViewerComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  @Input() config: {\r\n    user: User\r\n  };\r\n\r\n  @Output()\r\n  submitted: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  dismissed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // The datatable settings\r\n  settings: DataTableSettings;\r\n\r\n  // The list of group members, name and description of the group.\r\n  // A deep copy of the config.group object is needed in case user decide to cancel the form\r\n  roles: Role[] = [];\r\n  name: string;\r\n  description: string | undefined;\r\n\r\n  // The list of team members that have been added and removed\r\n  // It is necessary to keep track of those to allow the user to cancel the form\r\n  addedRoles: Role[] = [];\r\n  removedRoles: Role[] = [];\r\n\r\n  // Used for cleaning subscription\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private dynamicFormService: DynamicFormService, private userService: UserService, private roleService: RoleService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.buildTableSettings();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.buildTableSettings();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n\r\n  buildTableSettings(): void {\r\n    this.name = this.config.user.firstName + ' ' + this.config.user.lastName;\r\n    this.roles = this.config.user.roles;\r\n    const columnDefinition: DataTableColumnDefinition[] = [\r\n      {id: '1', name: 'id', label: 'Id', type: 'text', visible: true, searchable: true, filterMode: 'none'},\r\n      {id: '2', name: 'name', label: 'Role name', type: 'text', visible: true, searchable: true, filterMode: 'select'},\r\n      {\r\n        id: '3',\r\n        name: 'icon',\r\n        label: 'Remove',\r\n        type: 'icon',\r\n        visible: true,\r\n        searchable: false,\r\n        filterMode: 'none',\r\n        click: this.removeRole.bind(this)\r\n      },\r\n    ];\r\n\r\n    this.settings = {\r\n      selectableRows: true,\r\n      columnDefinitions: columnDefinition,\r\n      data: this.roles.map(g => ({...g, icon: faTrash})),\r\n      toolBar: {\r\n        left: [\r\n          {name: 'Remove', type: 'button', callback: this.removeRoles.bind(this)} as DataTableToolbarControl\r\n        ],\r\n        right: [\r\n          {name: 'Add Role', type: 'button', icon: faPlus, callback: this.addRole.bind(this)},\r\n          {type: 'search'} as DataTableToolbarControl\r\n        ]\r\n      },\r\n      groupBy: []\r\n    };\r\n  }\r\n\r\n  submitForm(method: string) {\r\n    this.submitted.emit({\r\n      addedRoles: this.addedRoles,\r\n      removedRoles: this.removedRoles\r\n    });\r\n  }\r\n\r\n  dismissForm(method: string) {\r\n    this.dismissed.emit(method);\r\n  }\r\n\r\n  // Add a role to the user\r\n  addRole(): void {\r\n    this.roleService.getRoles().pipe(takeUntil(this.unsubscribe)).subscribe(roles => {\r\n      const selectedRoleIds = this.roles.map(r => r.id);\r\n      const config = {\r\n        roles: roles.filter(r => !selectedRoleIds.includes(r.id)),\r\n        onSubmit: (selectedRoles: Role[]) => this.doAddRole(selectedRoles),\r\n        onDismiss: (e: string) => {\r\n        }\r\n      };\r\n      this.dynamicFormService.popModal(RolesSelectorComponent, config);\r\n    });\r\n  }\r\n\r\n  doAddRole(roles: Role[]): void {\r\n    this.config.user.roles.push(...roles);\r\n    this.userService.updateUser(this.config.user.id, this.config.user, false).pipe(takeUntil(this.unsubscribe)).subscribe(x => {\r\n\r\n        this.buildTableSettings();\r\n      },\r\n      error => {\r\n        const indexs = roles.map(r => this.removedRoles.findIndex(x => x.id === r.id));\r\n        indexs.forEach(idx => {\r\n          if (idx > 0) {\r\n            this.roles.splice(idx, 1);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  // Remove role from the user\r\n  removeRole(row: any): void {\r\n    this.removeRoles([{data: row}]);\r\n  }\r\n\r\n  removeRoles(rows: any[]): void {\r\n    const roles = rows.map(x => x.data) as Role[];\r\n    const config = {\r\n      headerText: 'Remove members',\r\n      submitText: 'Ok',\r\n      closeText: 'Cancel',\r\n      onSubmit: () => this.doRemoveRoles(roles),\r\n      onDismiss: () => {\r\n      },\r\n      notifications: [\r\n        'Are you sure to remove the following role(s) from this user?',\r\n        roles.map(x => x.name).join(', ')\r\n      ]\r\n    };\r\n    this.dynamicFormService.popNotification(config);\r\n  }\r\n\r\n  doRemoveRoles(roles: Role[]): void {\r\n    // Members were removed if they are not in the list of addedMembers, otherwise they are un-added\r\n    roles.forEach(u => {\r\n      const idx = this.addedRoles.findIndex(x => x.id === u.id);\r\n\r\n      if (idx > -1) {\r\n        this.addedRoles.splice(idx, 1);\r\n      } else {\r\n        this.removedRoles.push(u);\r\n      }\r\n\r\n      const idx2 = this.roles.findIndex(x => x.id === u.id);\r\n      this.roles.splice(idx2, 1);\r\n    });\r\n\r\n    this.buildTableSettings();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-content\">\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">Manage User: {{name}}</h5>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismissForm('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body d-flex flex-column\" style=\"height:80vh;\">\r\n    <csps-data-table [settings]=\"settings\" class=\"d-flex flex-fill\"></csps-data-table>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" (click)=\"dismissForm('Close button')\" class=\"btn btn-secondary\">Cancel</button>\r\n    <button type=\"button\" (click)=\"submitForm('OK')\" class=\"btn btn-primary\">Ok</button>\r\n  </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {faExternalLinkAlt, faPlus, faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport {DataTableColumnDefinition, DataTableSettings, DataTableToolbarControl} from 'data-table';\r\nimport {DynamicFormService, ModalConfig, CustomValidators} from 'dynamic-form';\r\nimport {UserService} from '../../core/user/user.service';\r\nimport {User} from '../../core/user/models/user.model';\r\nimport {UserViewerComponent} from '../user-viewer/user-viewer.component';\r\nimport {Role} from '../../core/user/models/role.model';\r\n\r\n@Component({\r\n  selector: 'emes-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit, OnDestroy {\r\n  settings: DataTableSettings;\r\n  // Indicator whether current user is admin\r\n  isAdmin = true;\r\n  // Used for cleaning subscription\r\n  private unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private userService: UserService, private dynamicFormService: DynamicFormService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const columnDefinition: DataTableColumnDefinition[] = [\r\n      {id: '1', name: 'id', label: 'Id', type: 'text', visible: true, searchable: false, filterMode: 'none'},\r\n      {id: '2', name: 'name', label: 'Name', type: 'text', visible: true, searchable: false, filterMode: 'text'},\r\n      {id: '3', name: 'roles.length', label: 'Roles', type: 'text', visible: true, searchable: false, filterMode: 'none'},\r\n      {\r\n        id: '4',\r\n        name: 'view',\r\n        label: 'View',\r\n        type: 'icon',\r\n        visible: true,\r\n        searchable: false,\r\n        filterMode: 'none',\r\n        click: this.viewUser.bind(this)\r\n      },\r\n      {\r\n        id: '5',\r\n        name: 'delete',\r\n        label: 'Delete',\r\n        type: 'icon',\r\n        visible: true,\r\n        searchable: false,\r\n        filterMode: 'none',\r\n        click: this.deleteUser.bind(this)\r\n      },\r\n    ];\r\n    this.userService.users$.pipe(takeUntil(this.unsubscribe)).subscribe(users => {\r\n      this.settings = {\r\n        selectableRows: false,\r\n        columnDefinitions: columnDefinition,\r\n        data: users.map(t => ({...t, name: t.firstName + ' ' + t.lastName, view: faExternalLinkAlt, delete: faTrash})),\r\n        toolBar: {\r\n          right: [\r\n            ...this.isAdmin ? [{\r\n              name: 'New User',\r\n              type: 'button',\r\n              icon: faPlus,\r\n              callback: this.createUser.bind(this)\r\n            } as DataTableToolbarControl] : [],\r\n            {type: 'filter'} as DataTableToolbarControl\r\n          ]\r\n        },\r\n        groupBy: []\r\n      };\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  createUser() {\r\n    const config: ModalConfig = {\r\n      headerText: 'Create a user',\r\n      submitText: 'OK',\r\n      closeText: 'Cancel',\r\n      onSubmit: (e: { userName: string, firstName: string, lastName: string, password: string }) => this.doCreateUser(e),\r\n      onDismiss: (e: string) => {\r\n      },\r\n      extraButtons: [],\r\n      fields: [\r\n        {\r\n          type: 'input',\r\n          label: 'User name',\r\n          name: 'userName',\r\n          placeholder: 'Enter a user name',\r\n          validation: [\r\n            CustomValidators.required('User name required'),\r\n          ]\r\n        },\r\n        {\r\n          type: 'input',\r\n          label: 'First name',\r\n          name: 'firstName',\r\n          placeholder: 'Enter the first name',\r\n          validation: [\r\n            CustomValidators.required('First name required'),\r\n          ]\r\n        },\r\n        {\r\n          type: 'input',\r\n          label: 'Last name',\r\n          name: 'lastName',\r\n          placeholder: 'Enter the last name',\r\n          validation: [\r\n            CustomValidators.required('Last name required'),\r\n          ]\r\n        },\r\n        {\r\n          type: 'input',\r\n          label: 'Password',\r\n          name: 'password',\r\n          placeholder: 'Enter the password',\r\n          validation: [\r\n            CustomValidators.required('Password required'),\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n    this.dynamicFormService.popDynamicFormModal(config);\r\n  }\r\n\r\n  private doCreateUser(e: {userName: string, firstName: string, lastName: string, password: string}) {\r\n    this.userService.createUser(e).pipe(takeUntil(this.unsubscribe)).subscribe();\r\n  }\r\n\r\n  viewUser(user: User) {\r\n    const config = {\r\n      user,\r\n      onSubmit: (changes: { addedRoles: Role[], removedRoles: Role[] }) => this.processChanges(user, changes),\r\n      onDismiss: (e: string) => {\r\n      }\r\n    };\r\n\r\n    this.dynamicFormService.popModal(UserViewerComponent, config);\r\n  }\r\n\r\n  private processChanges(user, changes: any) {\r\n    if (changes && changes.addedRoles && changes.addedRoles.length > 0) {\r\n\r\n    }\r\n    if (changes && changes.removedRoles && changes.removedRoles.length > 0) {\r\n\r\n    }\r\n  }\r\n\r\n  deleteUser() {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n  <h2>{{'ADMIN.USERS' | translate}}</h2>\r\n</div>\r\n<csps-data-table [settings]=\"settings\" class=\"d-flex flex-fill\"></csps-data-table>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, of} from 'rxjs';\r\nimport {environment} from '../../../environments/environment';\r\nimport {User} from './models/user.model';\r\nimport {Role} from './models/role.model';\r\nimport {tap} from 'rxjs/operators';\r\nimport {MenuItem} from '../layout/menu/menu-item';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n  private roleUrl = environment.baseUrl + 'api/v1/roles';\r\n  roles$: BehaviorSubject<Role[]> = new BehaviorSubject<Role[]>([]);\r\n  roles: Role[] = [\r\n    {\r\n      id: '1',\r\n      name: 'ROLE_ADMIN'\r\n    }\r\n  ];\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getRoles(): Observable<any[]> {\r\n    // const url = `${this.roleUrl}`;\r\n    // return this.http.get<any>(url).pipe(tap(r => {\r\n    //   this.roles$.next(r);\r\n    // }));\r\n    this.roles$.next(this.roles);\r\n    return of(this.roles);\r\n  }\r\n\r\n  create(name: string): Observable<any> {\r\n    // const url = `${this.roleUrl}`;\r\n    // const payload = {name};\r\n    // return this.http.post<any>(url, payload).pipe(tap(x => {\r\n    //   const roles = this.roles$.getValue();\r\n    //   roles.push({id: x, name});\r\n    //   this.roles$.next(roles);\r\n    // }));\r\n    const roles = this.roles$.getValue();\r\n    roles.push({id: '123', name});\r\n    this.roles$.next(roles);\r\n    return of({});\r\n  }\r\n\r\n  rename(id: string, newName: string): Observable<any> {\r\n    // const url = `${this.roleUrl}/${id}/add-menus`;\r\n    // const payload = {name: newName};\r\n    // return this.http.put<any>(url, payload).pipe(tap(x => {\r\n    //   const roles = this.roles$.getValue();\r\n    //   const theRole = roles.find(r => r.id === id);\r\n    //   if (theRole) {\r\n    //     theRole.name = newName;\r\n    //   }\r\n    //   this.roles$.next(roles);\r\n    // }));\r\n    const roles = this.roles$.getValue();\r\n    const theRole = roles.find(r => r.id === id);\r\n    if (theRole) {\r\n      theRole.name = newName;\r\n    }\r\n    this.roles$.next(roles);\r\n    return of({});\r\n  }\r\n\r\n  // addMenus(id: string, menus: MenuItem[]): Observable<any> {\r\n  //   const url = `${this.roleUrl}/${id}/add-menus`;\r\n  //   const payload = {menus};\r\n  //   return this.http.post<any>(url, payload).pipe(tap(x => {\r\n  //     const roles = this.roles$.getValue();\r\n  //     const theRole = roles.find(r => r.id === id);\r\n  //     if (theRole) {\r\n  //       theRole.menus.push(menus);\r\n  //     }\r\n  //     this.roles$.next(roles);\r\n  //   }));\r\n  // }\r\n  //\r\n  // removeMenus(id: string, menus: MenuItem[]): Observable<any> {\r\n  //   const url = `${this.roleUrl}/${id}/remove-menus`;\r\n  //   const payload = {menus};\r\n  //   return this.http.post<any>(url, payload).pipe(tap(x => {\r\n  //     const roles = this.roles$.getValue();\r\n  //     const theRole = roles.find(r => r.id === id);\r\n  //     if (theRole) {\r\n  //       menus.map(m => theRole.menus.findIndex(y => y.id === m.id)).forEach(idx => {\r\n  //         theRole.menus.splice(idx, 1);\r\n  //       });\r\n  //     }\r\n  //     this.roles$.next(roles);\r\n  //   }));\r\n  // }\r\n}\r\n"]}