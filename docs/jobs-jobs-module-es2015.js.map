{"version":3,"sources":["./src/app/lines/jobs/job-default/job-default.component.ts","./src/app/lines/jobs/job-default/job-default.component.html","./src/app/lines/jobs/job/job.component.ts","./src/app/lines/jobs/job/job.component.html","./src/app/lines/jobs/jobs-routing.module.ts","./src/app/lines/jobs/jobs.module.ts","./src/app/lines/jobs/jobs/jobs.component.ts","./src/app/lines/jobs/jobs/jobs.component.html","./src/app/lines/jobs/route-resolvers/job-resolver.service.ts","./src/app/lines/jobs/route-resolvers/jobs-resolver.service.ts","./src/app/lines/jobs/shared/job.service.ts"],"names":[],"mappings":"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","file":"jobs-jobs-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'emes-job-default',\n  templateUrl: './job-default.component.html',\n  styleUrls: ['./job-default.component.scss']\n})\nexport class JobDefaultComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>job-default works!</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { faEllipsisV, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Job } from '../shared/models/job.model';\n\n@Component({\n  selector: 'emes-job',\n  templateUrl: './job.component.html',\n  styleUrls: ['./job.component.scss']\n})\nexport class JobComponent implements OnInit, OnDestroy {\n\n  // Icon\n  faEllipsisV: IconDefinition = faEllipsisV;\n\n  // Current job\n  job: Job;\n\n  // Product type\n  types: any[] = ['Raw', 'Finished Product', 'Semi-Product'];\n\n  // Selected type\n  selectedType: any;\n  \n  // Indicator whether it is a author\n  isAuthor: boolean = true;\n  // Indicator whether it is a owner\n  isOwner: boolean = true;\n  \n  // Used for cleaning subscription \n  unsubscribe: Subject<void> = new Subject();\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\n      if (data.job){\n        this.job = data.job;\n        if(this.job.bom)\n          this.job.bom.ingredents.forEach(i => {\n            i.targetWeight = i.percent * this.job.targetWeight\n          })\n      }\n        \n      console.log(this.job)\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  save(close: boolean) {\n\n  }\n\n  close() {\n\n  }\n\n  copy() {\n\n  }\n\n  delete() {\n\n  }\n\n  typeSelected() {\n\n  }\n\n  nameChanged($event) {\n\n  }\n\n  start() {\n\n  }\n\n  pause() {\n\n  }\n\n  stop() {\n\n  }\n}\n","<div class=\"container-fluid d-flex flex-column\">\n    <div class=\"row justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <div class=\"col-auto\">\n            <h2>\n                Job Management\n            </h2>\n        </div>\n\n        <div class=\"col-auto\">\n            <div class=\"btn-toolbar mb-2 mb-md-0\">\n                <button *ngIf=\"job.state !== 'started'\" type=\"button\" class=\"btn btn-sm btn-danger mr-2\" (click)=\"start()\">Start</button>\n                <button *ngIf=\"job.state === 'started'\" type=\"button\" class=\"btn btn-sm btn-danger mr-2\" (click)=\"pause()\">Start</button>\n                <button *ngIf=\"job.state === 'started'\" type=\"button\" class=\"btn btn-sm btn-danger mr-2\" (click)=\"stop()\">Stop</button>\n                <div *ngIf=\"isAuthor\" class=\"btn-group mr-2\">\n                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"save(false)\">Save</button>\n                    <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\n                        <button class=\"btn btn-sm btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button ngbDropdownItem (click)=\"save(false)\">Save</button>\n                            <button ngbDropdownItem (click)=\"save(true)\">Save & Close</button>\n                        </div>\n                    </div>\n                </div>\n\n                <button type=\"button\" class=\"btn btn-sm btn-secondary mr-2\" (click)=\"close()\">Close</button>\n\n                <div class=\"btn-group mr-2\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" class=\"btn btn-sm btn-link dropdown-icon\" ngbDropdownToggle>\n                        <fa-icon class=\"text-primary pointer\" [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\n                    </button>\n                    <div class=\"dropdown-menu\" ngbDropdownMenu>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"save(true)\">Save</button>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"close()\">Save & Close</button>\n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"copy()\">Copy</button>   \n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"delete()\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<form>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputId\">Id</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"job.id\" disabled>\n      </div>\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputName\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"inputName\" [(ngModel)]=\"job.name\" (input)=\"nameChanged($event.target.value)\" placeholder=\"Enter Name here\">\n      </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputLine\">Line</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputLine\" name=\"inputLine\" [(ngModel)]=\"job.lineName\" disabled>\n        </div>\n        <div class=\"form-group col-md-6\">\n          <label for=\"inputTargetWeight\">Target Weight</label>\n          <input type=\"text\" class=\"form-control\" id=\"inputTargetWeight\" name=\"inputTargetWeight\" [(ngModel)]=\"job.targetWeight\">\n        </div>\n      </div>\n</form>\n\n<h3>BOM</h3>\n<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Line</th>\n        <th scope=\"col\">Weight</th>\n      </tr>\n    </thead>\n    <tbody *ngIf=\"job.bom\">\n      <tr *ngFor=\"let ingredent of job.bom.ingredents; let i = index\">\n        <th scope=\"row\">{{i}}</th>\n        <td>{{ingredent.id}}</td>\n        <td>{{ingredent.materialName}}</td>\n        <td>{{ingredent.percent*100}}%</td>\n        <td>{{ingredent.targetWeight}}</td>\n      </tr>\n    </tbody>\n  </table>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { JobDefaultComponent } from './job-default/job-default.component';\r\nimport { JobComponent } from './job/job.component';\r\nimport { JobsComponent } from './jobs/jobs.component';\r\nimport { JobResolverService } from './route-resolvers/job-resolver.service';\r\nimport { JobsResolverService } from './route-resolvers/jobs-resolver.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: JobsComponent, resolve: {jobs: JobsResolverService}\r\n    },\r\n    { path: ':jobId', resolve: {job: JobResolverService}, component: JobComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class JobsRoutingModule { }","import { NgModule } from '@angular/core';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { JobComponent } from './job/job.component';\nimport { JobDefaultComponent } from './job-default/job-default.component';\nimport { JobsRoutingModule } from './jobs-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [JobsComponent, JobComponent, JobDefaultComponent],\n  imports: [\n    JobsRoutingModule,\n    SharedModule,\n    NgbDropdownModule\n  ]\n})\nexport class JobsModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Job } from '../shared/models/job.model';\r\n\r\n@Component({\r\n  selector: 'emes-jobs',\r\n  templateUrl: './jobs.component.html',\r\n  styleUrls: ['./jobs.component.scss']\r\n})\r\nexport class JobsComponent implements OnInit, OnDestroy {\r\n\r\n  jobs: Job[];\r\n\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe((data: {jobs: Job[]}) =>{\r\n      this.jobs = data.jobs;\r\n      console.log(this.jobs)\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n}\r\n","<h3>Jobs</h3>\n<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Line</th>\n        <th scope=\"col\">Weight</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let job of jobs; let i = index\">\n        <th scope=\"row\">{{i}}</th>\n        <td><a [routerLink]=\"[job.id]\">{{job.id}}</a></td>\n        <td>{{job.name}}</td>\n        <td>{{job.lineName}}</td>\n        <td>{{job.targetWeight}}</td>\n      </tr>\n    </tbody>\n  </table>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Job } from '../shared/models/job.model';\nimport { JobService } from '../shared/job.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobResolverService {\n\n  constructor(private jobService: JobService, private router: Router) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Job> {\n    const id = route.paramMap.get('jobId');\n    return this.jobService.getJob(id as string);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Job } from '../shared/models/job.model';\nimport { JobService } from '../shared/job.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobsResolverService {\n\n  constructor(private jobService: JobService, private router: Router) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Job[]> {\n    const lineId = route.parent.parent.paramMap.get('lineId');\n    return this.jobService.getJobs(lineId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Job } from './models/job.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService {\n\n  jobs: Job[] = [\n    {\n      id: '821c6f60-c7b5-4090-ad6a-0cd25cd4cdfb',\n      name: 'INT1:000001',\n      lineId: '252558f9-c2a8-4f7d-b607-ff02dc1e6c4c',\n      lineName: 'INT1',\n      actualWeight: 3000,\n      targetWeight: 3100,\n      state: 'created'\n    },\n    {\n      id: '6e386b40-9684-4ebd-be32-8f4d8ddcb650',\n      name: 'INT2:000001',\n      lineId: '5bcdc28b-fc29-4d4e-a6c3-e15866531989',\n      lineName: 'INT2',\n      actualWeight: 5000,\n      targetWeight: 5100,\n      state: 'created'\n    },\n    {\n      id: 'e7dcecae-b6b7-486f-b9df-e6e638d4e98b',\n      name: 'MIX1:000001',\n      lineId: '844660ac-7ec5-4819-887d-00dae25676e6',\n      lineName: 'MIX1',\n      actualWeight: 3000,\n      targetWeight: 3100,\n      state: 'created',\n      bom: {id: 'ffbdd6c6-0b1f-47c5-8316-c8aa60f4e082', name: '', isTemplate: false, ingredents: [{\n        id: 'c3587775-4188-42f1-a9b2-7045b2013804',\n        name: '',\n        materialId: '821c6f60-c7b5-4090-ad6a-0cd25cd4cdfb',\n        materialName: 'Corn',\n        targetWeight: 0,\n        actualWeight: 0,\n        percent: .75\n      },\n      {\n        id: 'd657f387-2b40-4c98-89cd-6fdf30f81d1e',\n        name: '',\n        materialId: '0bd3f335-2fbe-4bb6-ac59-22baecf8afe8',\n        materialName: 'Vitamin C',\n        targetWeight: 0,\n        actualWeight: 0,\n        percent: .05\n      },\n      {\n        id: '2dac15cf-9192-4b4b-a206-48541b664980',\n        name: '',\n        materialId: '799d0452-40f9-4089-8611-02344e878941',\n        materialName: 'Vitamin D',\n        targetWeight: 0,\n        actualWeight: 0,\n        percent: .05\n      },\n      {\n        id: '1eef7c9d-286c-4bae-bd95-c55dd9692a15',\n        name: '',\n        materialId: 'fdcacb5c-89fc-424a-9554-0c78612e708e',\n        materialName: 'Niacin',\n        targetWeight: 0,\n        actualWeight: 0,\n        percent: .15\n      }\n      \n    ]}\n    }\n  ];\n\n  constructor() { }\n\n  getJob(id: string): Observable<Job> {\n    return of(this.jobs.find(j => j.id === id));\n  }\n\n  getJobs(lineId: string): Observable<Job[]> {\n    return of(this.jobs.filter(j => j.lineId === lineId));\n  }\n}"],"sourceRoot":"webpack:///"}