{"version":3,"sources":["./src/app/equipments/equipment-default/equipment-default.component.ts","./src/app/equipments/equipment-default/equipment-default.component.html","./src/app/equipments/equipment-home/equipment-home.component.ts","./src/app/equipments/equipment-home/equipment-home.component.html","./src/app/equipments/equipment/equipment.component.ts","./src/app/equipments/equipment/equipment.component.html","./src/app/equipments/equipments-routing.module.ts","./src/app/equipments/equipments-wrapper/equipments-wrapper.component.ts","./src/app/equipments/equipments-wrapper/equipments-wrapper.component.html","./src/app/equipments/equipments.module.ts","./src/app/equipments/equipments/equipments.component.ts","./src/app/equipments/equipments/equipments.component.html","./src/app/equipments/route-resolvers/equipment-resolver.service.ts","./src/app/equipments/route-resolvers/equipments-resolver.service.ts","./src/app/equipments/route-resolvers/section-resolver.service.ts","./src/app/equipments/route-resolvers/sections-resolver.service.ts","./src/app/equipments/section/section.component.ts","./src/app/equipments/section/section.component.html","./src/app/equipments/sections-wrapper/sections-wrapper.component.ts","./src/app/equipments/sections-wrapper/sections-wrapper.component.html","./src/app/equipments/sections/sections.component.ts","./src/app/equipments/sections/sections.component.html"],"names":[],"mappings":"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","file":"equipments-equipments-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'emes-equipment-default',\n  templateUrl: './equipment-default.component.html',\n  styleUrls: ['./equipment-default.component.scss']\n})\nexport class EquipmentDefaultComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid d-flex flex-column flex-fill\">\n    <div class=\"row p-0 flex-fill align-items-center mt-5\">\n      <div class=\"col text-center\">Select a item in the left hand side list</div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { faTasks } from '@fortawesome/free-solid-svg-icons';\r\nimport { MenuItem } from 'src/app/shared/side-bar/model/menu-item.model';\r\n\r\n@Component({\r\n  selector: 'emes-equipment-home',\r\n  templateUrl: './equipment-home.component.html',\r\n  styleUrls: ['./equipment-home.component.scss']\r\n})\r\nexport class EquipmentHomeComponent implements OnInit {\r\n  // Menu items\r\n  menuItems: MenuItem[];\r\n\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.menuItems = [\r\n      {id: '1', label: 'Sections', icon: faTasks, route: ['sections'], children: []},\r\n      {id: '2', label: 'Equipments', icon: faTasks, route: ['equipments'], children: []}\r\n    ];\r\n  }\r\n}\r\n","<div class=\"container-fluid h-100 px-0\">\r\n    <div class=\"row h-100 no-gutters\">\r\n        <emes-side-bar class=\"col-md-3 col-lg-2 d-none d-md-block bg-light\" [header]=\"'Process'\" [menuItems]=\"menuItems\"></emes-side-bar>\r\n\r\n        <main class=\"col-md-9 col-lg-10 d-flex flex-column w-100\">\r\n            <router-outlet></router-outlet>\r\n        </main>\r\n\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { faEllipsisV, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Equipment } from '../shared/models/equipment.model';\n\n@Component({\n  selector: 'emes-equipment',\n  templateUrl: './equipment.component.html',\n  styleUrls: ['./equipment.component.scss']\n})\nexport class EquipmentComponent implements OnInit {\n\n  // Icon\n  faEllipsisV: IconDefinition = faEllipsisV;\n\n  // Current section\n  equipment: Equipment;\n\n  // Equipment type\n  types: any[] = ['discharger', 'mixer', 'packer'];\n  // Selected type\n  selectedType: any;\n  \n  // Indicator whether it is a author\n  isAuthor: boolean = true;\n  // Indicator whether it is a owner\n  isOwner: boolean = true;\n\n  // Used for cleaning subscription \n  unsubscribe: Subject<void> = new Subject();\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\n      if (data.equipment)\n        this.equipment = data.equipment;\n      console.log(this.equipment)\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  save(close: boolean) {\n\n  }\n\n  close() {\n\n  }\n\n  copy() {\n\n  }\n\n  delete() {\n\n  }\n\n  typeSelected() {\n\n  }\n\n  nameChanged($event) {\n\n  }\n\n}\n","<div class=\"container-fluid d-flex flex-column\">\n    <div class=\"row justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <div class=\"col-auto\">\n            <h2>\n                Equipment Management\n            </h2>\n        </div>\n\n        <div class=\"col-auto\">\n            <div class=\"btn-toolbar mb-2 mb-md-0\">\n                \n                <div *ngIf=\"isAuthor\" class=\"btn-group mr-2\">\n                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"save(false)\">Save</button>\n                    <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\n                        <button class=\"btn btn-sm btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button ngbDropdownItem (click)=\"save(false)\">Save</button>\n                            <button ngbDropdownItem (click)=\"save(true)\">Save & Close</button>\n                        </div>\n                    </div>\n                </div>\n\n                <button type=\"button\" class=\"btn btn-sm btn-secondary mr-2\" (click)=\"close()\">Close</button>\n\n                <div class=\"btn-group mr-2\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" class=\"btn btn-sm btn-link dropdown-icon\" ngbDropdownToggle>\n                        <fa-icon class=\"text-primary pointer\" [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\n                    </button>\n                    <div class=\"dropdown-menu\" ngbDropdownMenu>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"save(true)\">Save</button>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"close()\">Save & Close</button>\n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"copy()\">Copy</button>   \n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"delete()\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<form>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputId\">Id</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"equipment.id\" disabled>\n      </div>\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputName\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"inputName\" [(ngModel)]=\"equipment.name\" (input)=\"nameChanged($event.target.value)\" placeholder=\"Enter Name here\">\n      </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"selectType\">Select Type</label>\n            <select [(ngModel)]=\"selectedType\" name=\"selectType\" class=\"form-control\" (ngModelChange)=\"typeSelected()\">\n              <option [ngValue]=\"undefined\">Please select a type</option>\n              <option [ngValue]=\"type\" *ngFor=\"let type of types\">\n                {{ type }}\n              </option>\n            </select>\n          </div>\n        <div class=\"form-group col-md-6\">\n          <label for=\"inputType\">Type</label>\n          <input type=\"text\" class=\"form-control\" id=\"inputType\" name=\"inputType\" [(ngModel)]=\"equipment.type\" disabled>\n        </div>\n      </div>\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EquipmentDefaultComponent } from './equipment-default/equipment-default.component';\r\nimport { EquipmentHomeComponent } from './equipment-home/equipment-home.component';\r\nimport { EquipmentComponent } from './equipment/equipment.component';\r\nimport { EquipmentsWrapperComponent } from './equipments-wrapper/equipments-wrapper.component';\r\nimport { EquipmentsComponent } from './equipments/equipments.component';\r\nimport { EquipmentResolverService } from './route-resolvers/equipment-resolver.service';\r\nimport { EquipmentsResolverService } from './route-resolvers/equipments-resolver.service';\r\nimport { SectionResolverService } from './route-resolvers/section-resolver.service';\r\nimport { SectionsResolverService } from './route-resolvers/sections-resolver.service';\r\nimport { SectionComponent } from './section/section.component';\r\nimport { SectionsWrapperComponent } from './sections-wrapper/sections-wrapper.component';\r\nimport { SectionsComponent } from './sections/sections.component';\r\nimport { AuthGuardService } from '../core/user/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: EquipmentHomeComponent, /*canActivate: [AuthGuardService],*/ children: [\r\n      {\r\n        path: 'sections', component: SectionsWrapperComponent, /*canActivate: [AuthGuardService],*/children: [\r\n          { path: '', resolve: { sections: SectionsResolverService }, /*canActivate: [AuthGuardService],*/ component: SectionsComponent },\r\n          { path: ':sectionId', resolve: { section: SectionResolverService }, component: SectionComponent }\r\n        ]\r\n      },\r\n      {\r\n        path: 'equipments', component: EquipmentsWrapperComponent, /*canActivate: [AuthGuardService],*/ children: [\r\n          { path: '', resolve: { equipments: EquipmentsResolverService }, /*canActivate: [AuthGuardService],*/ component: EquipmentsComponent },\r\n          { path: ':equipId', resolve: { equipment: EquipmentResolverService }, component: EquipmentComponent }\r\n        ]\r\n      },\r\n      { path: '', component: EquipmentDefaultComponent }\r\n    ]\r\n  }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EquipmentsRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'emes-equipments-wrapper',\n  templateUrl: './equipments-wrapper.component.html',\n  styleUrls: ['./equipments-wrapper.component.scss']\n})\nexport class EquipmentsWrapperComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EquipmentsComponent } from './equipments/equipments.component';\nimport { SectionsComponent } from './sections/sections.component';\nimport { SectionComponent } from './section/section.component';\nimport { EquipmentComponent } from './equipment/equipment.component';\nimport { EquipmentsRoutingModule } from './equipments-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { EquipmentHomeComponent } from './equipment-home/equipment-home.component';\nimport { SectionsWrapperComponent } from './sections-wrapper/sections-wrapper.component';\nimport { EquipmentsWrapperComponent } from './equipments-wrapper/equipments-wrapper.component';\nimport { EquipmentDefaultComponent } from './equipment-default/equipment-default.component';\n\n\n\n@NgModule({\n  declarations: [EquipmentsComponent, SectionsComponent, SectionComponent, EquipmentComponent, EquipmentHomeComponent, SectionsWrapperComponent, EquipmentsWrapperComponent, EquipmentDefaultComponent],\n  imports: [\n    SharedModule,\n    EquipmentsRoutingModule\n  ]\n})\nexport class EquipmentsModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Equipment } from '../shared/models/equipment.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'emes-equipments',\r\n  templateUrl: './equipments.component.html',\r\n  styleUrls: ['./equipments.component.scss']\r\n})\r\nexport class EquipmentsComponent implements OnInit, OnDestroy {\r\n\r\n  equipments: Equipment[];\r\n\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe((data: {equipments: Equipment[]}) =>{\r\n      this.equipments = data.equipments;\r\n      console.log(this.equipments)\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Type</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let equipment of equipments; let i = index\">\n        <th scope=\"row\">{{i}}</th>\n        <td><a [routerLink]=\"[equipment.id]\">{{equipment.id}}</a></td>\n        <td>{{equipment.name}}</td>\n        <td>{{equipment.type}}</td>\n      </tr>\n    </tbody>\n</table>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { EquipmentService } from '../shared/equipment.service';\nimport { Equipment } from '../shared/models/equipment.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EquipmentResolverService {\n\n  constructor(private equipmentService: EquipmentService, private router: Router) { }\n  \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Equipment> {\n    const id = route.paramMap.get('equipId');\n    console.log(id)\n    return this.equipmentService.getEquipment(id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { EquipmentService } from '../shared/equipment.service';\nimport { Equipment } from '../shared/models/equipment.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EquipmentsResolverService {\n\n  constructor(private equipmentService: EquipmentService, private router: Router) { }\n  \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Equipment[]> {\n    return this.equipmentService.getEquipments();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { EquipmentService } from '../shared/equipment.service';\nimport { Section } from '../shared/models/section.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionResolverService {\n\n  constructor(private equipmentService: EquipmentService, private router: Router) { }\n  \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Section> {\n    const id = route.paramMap.get('sectionId');\n    console.log('SectionId: ' + id);\n    return this.equipmentService.getSection(id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { EquipmentService } from '../shared/equipment.service';\nimport { Section } from '../shared/models/section.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionsResolverService {\n\n  constructor(private equipmentService: EquipmentService, private router: Router) { }\n  \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Section[]> {\n    return this.equipmentService.getSections();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { faEllipsisV, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Section } from 'src/app/lines/shared/models/section.model';\n\n@Component({\n  selector: 'emes-section',\n  templateUrl: './section.component.html',\n  styleUrls: ['./section.component.scss']\n})\nexport class SectionComponent implements OnInit {\n  // Icon\n  faEllipsisV: IconDefinition = faEllipsisV;\n\n  // Current section\n  section: Section;\n\n  // Indicator whether it is a author\n  isAuthor: boolean = true;\n  // Indicator whether it is a owner\n  isOwner: boolean = true;\n\n  // Used for cleaning subscription \n  unsubscribe: Subject<void> = new Subject();\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\n      if (data.section)\n        this.section = data.section;\n      console.log(this.section)\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  save(close: boolean) {\n\n  }\n\n  close() {\n\n  }\n\n  copy() {\n\n  }\n\n  delete() {\n\n  }\n\n  typeSelected() {\n\n  }\n\n  nameChanged($event) {\n\n  }\n}\n","<div class=\"container-fluid d-flex flex-column\">\n    <div class=\"row justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <div class=\"col-auto\">\n            <h2>\n                Section Management\n            </h2>\n        </div>\n\n        <div class=\"col-auto\">\n            <div class=\"btn-toolbar mb-2 mb-md-0\">\n                \n                <div *ngIf=\"isAuthor\" class=\"btn-group mr-2\">\n                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"save(false)\">Save</button>\n                    <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\n                        <button class=\"btn btn-sm btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button ngbDropdownItem (click)=\"save(false)\">Save</button>\n                            <button ngbDropdownItem (click)=\"save(true)\">Save & Close</button>\n                        </div>\n                    </div>\n                </div>\n\n                <button type=\"button\" class=\"btn btn-sm btn-secondary mr-2\" (click)=\"close()\">Close</button>\n\n                <div class=\"btn-group mr-2\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" class=\"btn btn-sm btn-link dropdown-icon\" ngbDropdownToggle>\n                        <fa-icon class=\"text-primary pointer\" [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\n                    </button>\n                    <div class=\"dropdown-menu\" ngbDropdownMenu>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"save(true)\">Save</button>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"close()\">Save & Close</button>\n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"copy()\">Copy</button>   \n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"delete()\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<form>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputId\">Id</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"section.id\" disabled>\n      </div>\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputName\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"inputName\" [(ngModel)]=\"section.name\" (input)=\"nameChanged($event.target.value)\" placeholder=\"Enter Name here\">\n      </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'emes-sections-wrapper',\n  templateUrl: './sections-wrapper.component.html',\n  styleUrls: ['./sections-wrapper.component.scss']\n})\nexport class SectionsWrapperComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { Section } from 'src/app/lines/shared/models/section.model';\r\n\r\n@Component({\r\n  selector: 'emes-sections',\r\n  templateUrl: './sections.component.html',\r\n  styleUrls: ['./sections.component.scss']\r\n})\r\nexport class SectionsComponent implements OnInit {\r\n\r\n  sections: Section[];\r\n\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe((data: {sections: Section[]}) =>{\r\n      this.sections = data.sections;\r\n      console.log(this.sections)\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Equipments</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let section of sections; let i = index\">\n        <th scope=\"row\">{{i}}</th>\n        <td><a [routerLink]=\"['..', section.id]\">{{section.id}}</a></td>\n        <td>{{section.name}}</td>\n        <td>{{section.equipments.length}}</td>\n      </tr>\n    </tbody>\n</table>"],"sourceRoot":"webpack:///"}