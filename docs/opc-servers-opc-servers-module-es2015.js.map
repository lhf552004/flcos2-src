{"version":3,"sources":["./src/app/opc-servers/opc-server-default/opc-server-default.component.ts","./src/app/opc-servers/opc-server-default/opc-server-default.component.html","./src/app/opc-servers/opc-server-routing.module.ts","./src/app/opc-servers/opc-server/opc-server.component.ts","./src/app/opc-servers/opc-server/opc-server.component.html","./src/app/opc-servers/opc-servers.module.ts","./src/app/opc-servers/opc-servers/opc-servers.component.ts","./src/app/opc-servers/opc-servers/opc-servers.component.html","./src/app/opc-servers/route-resolvers/opc-server-resolver.service.ts","./src/app/opc-servers/route-resolvers/opc-servers-resolver.service.ts","./src/app/opc-servers/shared/opc-server-config.service.ts"],"names":[],"mappings":"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","file":"opc-servers-opc-servers-module-es2015.js","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'emes-opc-server-default',\r\n  templateUrl: './opc-server-default.component.html',\r\n  styleUrls: ['./opc-server-default.component.scss']\r\n})\r\nexport class OpcServerDefaultComponent implements OnInit {\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","<p>opc-server-default works!</p>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {OpcServersComponent} from './opc-servers/opc-servers.component';\r\nimport {OpcServerResolverService} from './route-resolvers/opc-server-resolver.service';\r\nimport {OpcServersResolverService} from './route-resolvers/opc-servers-resolver.service';\r\nimport {OpcServerComponent} from './opc-server/opc-server.component';\r\nimport {OpcServerDefaultComponent} from './opc-server-default/opc-server-default.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '', component: OpcServersComponent, resolve: {opcServers: OpcServersResolverService}, children: [\r\n    {path: ':opcServerId', component: OpcServerComponent, resolve: {opcServer: OpcServerResolverService}},\r\n    {path: '', component: OpcServerDefaultComponent}\r\n  ]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OpcServerRoutingModule {\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {IconDefinition, faEllipsisV} from '@fortawesome/free-solid-svg-icons';\r\nimport {OPCServer} from '../shared/models/opc-server.model';\r\nimport {OpcServerConfigService} from '../shared/opc-server-config.service';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {Role} from '../../core/user/models/role.model';\r\nimport {DynamicFormService} from 'dynamic-form';\r\nimport {Notification} from '../../core/notificator/notification.model';\r\nimport {NotificatorService} from '../../core/notificator/notificator.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'emes-opc-server',\r\n  templateUrl: './opc-server.component.html',\r\n  styleUrls: ['./opc-server.component.scss']\r\n})\r\nexport class OpcServerComponent implements OnInit, OnDestroy {\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n  isAuthor: boolean;\r\n  isOwner: boolean;\r\n  // Icon\r\n  faEllipsisV: IconDefinition = faEllipsisV;\r\n\r\n  // Indicator whether current opc server configuration is changed\r\n  isChanged = false;\r\n\r\n  opcServer: OPCServer;\r\n\r\n  constructor(private opcServerConfigService: OpcServerConfigService,\r\n              private dynamicFormService: DynamicFormService,\r\n              private notificatorService: NotificatorService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.opcServerConfigService.opcServer$.pipe(takeUntil(this.unsubscribe)).subscribe(x => {\r\n      this.opcServer = x;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  opcServerChanged() {\r\n    this.isChanged = true;\r\n  }\r\n\r\n  endPointUrlChanged() {\r\n    this.isChanged = true;\r\n  }\r\n\r\n  save() {\r\n    this.opcServerConfigService.update(this.opcServer.id, this.opcServer).pipe(takeUntil(this.unsubscribe)).subscribe(x => {\r\n      this.isChanged = false;\r\n      this.notificatorService.sendNotification(new Notification('Save successfully', 'info'));\r\n    }, error => {\r\n      this.notificatorService.sendNotification(new Notification('Save failed', 'danger'));\r\n    });\r\n  }\r\n\r\n  copy() {\r\n    const newOpcServer = {...this.opcServer, id: '', name: this.opcServer.name + '- copy'};\r\n    this.opcServerConfigService.create(newOpcServer)\r\n      .pipe(takeUntil(this.unsubscribe)).subscribe(x => {\r\n      this.notificatorService.sendNotification(new Notification('Copy successfully with ' + this.opcServer.name + '- copy', 'info'));\r\n    });\r\n  }\r\n\r\n  delete() {\r\n    const config = {\r\n      headerText: 'Delete Opc Server',\r\n      submitText: 'Ok',\r\n      closeText: 'Cancel',\r\n      onSubmit: () => this.doDeleteOPCServer(),\r\n      onDismiss: () => {\r\n      },\r\n      notifications: [\r\n        'Are you sure to delete the opc server?',\r\n        this.opcServer.name\r\n      ]\r\n    };\r\n    this.dynamicFormService.popNotification(config);\r\n  }\r\n\r\n  doDeleteOPCServer() {\r\n    this.opcServerConfigService.delete(this.opcServer.id).pipe(takeUntil(this.unsubscribe)).subscribe(x => {\r\n      this.notificatorService.sendNotification(new Notification('OPC Server ' + this.opcServer.name + ' is deleted', 'info'));\r\n      this.router.navigate(['..'], {relativeTo: this.route});\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid d-flex flex-column\">\r\n  <div class=\"row justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n    <div class=\"col-auto\">\r\n      <h2>\r\n        {{'OPC.OPC SERVER' | translate}}\r\n      </h2>\r\n    </div>\r\n\r\n    <div class=\"col-auto\">\r\n      <div class=\"btn-toolbar mb-2 mb-md-0\">\r\n        <button [disabled]=\"!isChanged\" type=\"button\" class=\"btn btn-sm btn-primary mr-2\" (click)=\"save()\">{{'GENERAL.SAVE' | translate}}</button>\r\n\r\n        <div class=\"btn-group mr-2\" ngbDropdown placement=\"bottom-right\">\r\n          <button type=\"button\" class=\"btn btn-sm btn-link dropdown-icon\" ngbDropdownToggle>\r\n            <fa-icon class=\"text-primary pointer\" [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\r\n          </button>\r\n          <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n            <button ngbDropdownItem (click)=\"copy()\">{{'GENERAL.COPY' | translate}}</button>\r\n            <button ngbDropdownItem (click)=\"delete()\">{{'GENERAL.DELETE' | translate}}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<form class=\"ml-2 mr-2\">\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6 col-sm-12\">\r\n      <label for=\"inputId\">Id</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"opcServer.id\" disabled>\r\n    </div>\r\n    <div class=\"form-group col-md-6 col-sm-12\">\r\n      <label for=\"inputTargetWeight\">{{'GENERAL.STATUS' | translate}}</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputTargetWeight\" name=\"inputTargetWeight\" [(ngModel)]=\"opcServer.status\" disabled>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6 col-sm-12\">\r\n      <label for=\"inputName\">{{'GENERAL.NAME' | translate}}</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"inputName\" [(ngModel)]=\"opcServer.name\" (input)=\"opcServerChanged()\" placeholder=\"Enter Name here\">\r\n    </div>\r\n    <div class=\"form-group col-md-6 col-sm-12\">\r\n      <label for=\"inputLine\">{{'OPC.ADDRESS' | translate}}</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputLine\" name=\"inputLine\" [(ngModel)]=\"opcServer.address\" (input)=\"opcServerChanged()\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6 col-sm-12\">\r\n      <label for=\"inputName\">{{'OPC.TCP PORT' | translate}}</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputTcpPort\" name=\"inputTcpPort\" [(ngModel)]=\"opcServer.tcpPort\" (input)=\"opcServerChanged()\" placeholder=\"Enter tcp port here\">\r\n    </div>\r\n    <div class=\"form-group col-md-6 col-sm-12\">\r\n      <label for=\"inputLine\">{{'OPC.HTTPS PORT' | translate}}</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"inputHttpsPort\" name=\"inputHttpsPort\" [(ngModel)]=\"opcServer.httpsPort\" (input)=\"opcServerChanged()\" placeholder=\"Enter https port here\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col-md-6 col-sm-12\">\r\n      <div class=\"form-check col-md-6 col-sm-12\">\r\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"checkboxInternal\" name=\"checkboxInternal\" [(ngModel)]=\"opcServer.internal\" (input)=\"opcServerChanged()\" placeholder=\"Enter Name here\">\r\n        <label class=\"form-check-label\" for=\"inputName\">{{'GENERAL.INTERNAL' | translate}}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OpcServersComponent } from './opc-servers/opc-servers.component';\r\nimport { OpcServerComponent } from './opc-server/opc-server.component';\r\nimport { OpcServerDefaultComponent } from './opc-server-default/opc-server-default.component';\r\nimport {OpcServerRoutingModule} from './opc-server-routing.module';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {NgbDropdownModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [OpcServersComponent, OpcServerComponent, OpcServerDefaultComponent],\r\n  imports: [\r\n    SharedModule,\r\n    NgbDropdownModule,\r\n    OpcServerRoutingModule\r\n  ]\r\n})\r\nexport class OpcServersModule { }\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {UserService} from '../../core/user/user.service';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {faExternalLinkAlt, faPlus, faTasks, faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport {User} from '../../core/user/models/user.model';\r\nimport {Role} from '../../core/user/models/role.model';\r\nimport {UserViewerComponent} from '../../admin/user-viewer/user-viewer.component';\r\nimport {DataTableSettings, DataTableColumnDefinition, DataTableToolbarControl} from 'data-table';\r\nimport {DynamicFormService, ModalConfig, CustomValidators} from 'dynamic-form';\r\nimport {OpcServerConfigService} from '../shared/opc-server-config.service';\r\nimport {MenuItem} from '../../shared/side-bar/model/menu-item.model';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {OPCServer} from '../shared/models/opc-server.model';\r\n\r\n@Component({\r\n  selector: 'emes-opc-servers',\r\n  templateUrl: './opc-servers.component.html',\r\n  styleUrls: ['./opc-servers.component.scss']\r\n})\r\nexport class OpcServersComponent implements OnInit, OnDestroy {\r\n\r\n  // Menu items\r\n  menuItems: MenuItem[];\r\n\r\n  // Used for cleaning subscription\r\n  unsubscribe: Subject<void> = new Subject();\r\n\r\n  constructor(private opcServerConfigService: OpcServerConfigService,\r\n              private dynamicFormService: DynamicFormService,\r\n              private route: ActivatedRoute, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.opcServerConfigService.opcServers$.pipe(takeUntil(this.unsubscribe)).subscribe(x => {\r\n      this.menuItems = x.map(opc => ({\r\n        id: opc.id,\r\n        label: opc.name,\r\n        icon: null,\r\n        route: [opc.id],\r\n        children: []\r\n      }));\r\n      const newPageMenuItem: MenuItem = {\r\n        id: 'newPageMenuItemId',\r\n        label: 'New Page',\r\n        icon: faPlus,\r\n        stickyBottom: true,\r\n        onClick: () => this.showCreateNewOpcServer('', '')\r\n      };\r\n      this.menuItems.push(newPageMenuItem);\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n  showCreateNewOpcServer(path: string, sectionId: string) {\r\n    const config: ModalConfig = {\r\n      headerText: 'Create a Opc Server',\r\n      submitText: 'OK',\r\n      closeText: 'Cancel',\r\n      onSubmit: (e: OPCServer) => this.doCreateOpcServer(e),\r\n      onDismiss: (e: string) => {\r\n      },\r\n      extraButtons: [],\r\n      fields: [\r\n        {\r\n          type: 'input',\r\n          label: 'Name',\r\n          name: 'name',\r\n          placeholder: 'Enter a opc server name',\r\n          validation: [\r\n            CustomValidators.required('Opc Server name required'),\r\n          ]\r\n        },\r\n        {\r\n          type: 'input',\r\n          label: 'Address',\r\n          name: 'address',\r\n          placeholder: 'Enter the address',\r\n          validation: [\r\n            CustomValidators.required('Address required'),\r\n          ]\r\n        },\r\n        {\r\n          type: 'checkbox',\r\n          label: 'Is internal',\r\n          name: 'internal',\r\n          placeholder: 'Is Internal',\r\n          validation: []\r\n        },\r\n        {\r\n          type: 'number',\r\n          label: 'Tcp binding port',\r\n          name: 'tcpPort',\r\n          placeholder: 'Enter the tcp binding port',\r\n          validation: [\r\n            CustomValidators.required('Tcp binding port required'),\r\n          ]\r\n        },\r\n        {\r\n          type: 'number',\r\n          label: 'Https binding port',\r\n          name: 'httpsPort',\r\n          placeholder: 'Enter the https binding port',\r\n          validation: [\r\n            CustomValidators.required('Https binding port required'),\r\n          ]\r\n        },\r\n        {\r\n          type: 'input',\r\n          label: 'Config path',\r\n          name: 'configPath',\r\n          placeholder: 'Enter the config path',\r\n          validation: [\r\n            CustomValidators.required('Config path required'),\r\n          ]\r\n        },\r\n      ]\r\n    };\r\n    this.dynamicFormService.popDynamicFormModal(config);\r\n  }\r\n\r\n  doCreateOpcServer(opcServer: OPCServer) {\r\n    this.opcServerConfigService.create(opcServer).pipe(takeUntil(this.unsubscribe)).subscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid h-100 px-0\">\r\n  <div class=\"row h-100 no-gutters\">\r\n    <emes-side-bar class=\"col-md-3 col-lg-2 d-none d-md-block bg-light\" [header]=\"'OPC.OPC SERVERS'\" [menuItems]=\"menuItems\"></emes-side-bar>\r\n\r\n    <main class=\"col-md-9 col-lg-10 d-flex flex-column w-100\">\r\n      <router-outlet></router-outlet>\r\n    </main>\r\n\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {OpcServerConfigService} from '../shared/opc-server-config.service';\r\nimport {OPCServer} from '../shared/models/opc-server.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OpcServerResolverService {\r\n\r\n  constructor(private opcServerConfigService: OpcServerConfigService, private router: Router) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<OPCServer> {\r\n    const id = route.paramMap.get('opcServerId');\r\n    return this.opcServerConfigService.get(id as string);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {OpcServerConfigService} from '../shared/opc-server-config.service';\r\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {OPCServer} from '../shared/models/opc-server.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OpcServersResolverService {\r\n\r\n  constructor(private opcServerConfigService: OpcServerConfigService, private router: Router) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<OPCServer[]> {\r\n    return this.opcServerConfigService.getAll(0, 50);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, of} from 'rxjs';\r\nimport {Order} from '../../orders/shared/models/order.model';\r\nimport {tap} from 'rxjs/operators';\r\nimport {environment} from '../../../environments/environment';\r\nimport {OPCServer} from './models/opc-server.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OpcServerConfigService {\r\n  private opcConfigUrl = environment.baseUrl + 'api/v1/opc-configs';\r\n  opcServers$: BehaviorSubject<OPCServer[]> = new BehaviorSubject<OPCServer[]>([]);\r\n  opcServer$: BehaviorSubject<OPCServer | null> = new BehaviorSubject<OPCServer | null>(null);\r\n  opcServers: OPCServer[] = [\r\n    {\r\n      id: '1',\r\n      name: 'OPC',\r\n      address: '0.0.0.0',\r\n      internal: false,\r\n      tcpPort: 12345,\r\n      httpsPort: 1234,\r\n      status: 'Running'\r\n    }\r\n  ];\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  get(id: string): Observable<OPCServer> {\r\n    // const url = `${this.opcConfigUrl}/${id}`;\r\n    // return this.http.get<OPCServer>(url).pipe(tap(x => {\r\n    //   this.opcServer$.next(x);\r\n    // }));\r\n    const opcServer = this.opcServers.find(o => o.id === id);\r\n    this.opcServer$.next(opcServer);\r\n    return of(opcServer);\r\n  }\r\n\r\n  getAll(page: number, size: number): Observable<OPCServer[]> {\r\n    // const url = `${this.opcConfigUrl}`;\r\n    // return this.http.get<OPCServer[]>(url).pipe(tap(x => {\r\n    //   this.opcServers$.next(x);\r\n    // }));\r\n    this.opcServers$.next(this.opcServers);\r\n    return of(this.opcServers);\r\n  }\r\n\r\n  create(opcServer: OPCServer): Observable<any> {\r\n    // const url = `${this.opcConfigUrl}`;\r\n    // return this.http.post(url, opcServer).pipe(tap(x => {\r\n    //   const opcServers = this.opcServers$.getValue();\r\n    //   opcServers.push({...opcServer, id: x, status: 'New'});\r\n    //   this.opcServers$.next(opcServers);\r\n    // }));\r\n      const opcServers = this.opcServers$.getValue();\r\n      opcServers.push({...opcServer, id: '1123', status: 'New'});\r\n      this.opcServers$.next(opcServers);\r\n      return of(opcServers);\r\n  }\r\n\r\n  update(id: string, opcServer: OPCServer): Observable<any> {\r\n    // const url = `${this.opcConfigUrl}/${id}`;\r\n    // return this.http.put(url, opcServer).pipe(tap(x => {\r\n    //   const opcServers = this.opcServers$.getValue();\r\n    //   let existed = opcServers.find(o => o.id === id);\r\n    //   if (existed) {\r\n    //     existed = {...opcServer};\r\n    //   }\r\n    //   this.opcServers$.next(opcServers);\r\n    // }));\r\n    const opcServers = this.opcServers$.getValue();\r\n    let existed = opcServers.find(o => o.id === id);\r\n    if (existed) {\r\n      existed = {...opcServer};\r\n    }\r\n    this.opcServers$.next(opcServers);\r\n    return of(opcServers);\r\n  }\r\n\r\n  delete(id: string): Observable<any> {\r\n    // const url = `${this.opcConfigUrl}/${id}`;\r\n    // return this.http.delete(url).pipe(tap(x => {\r\n    //   const opcServers = this.opcServers$.getValue();\r\n    //   const idx = opcServers.findIndex(o => o.id === id);\r\n    //   if (idx > -1) {\r\n    //     opcServers.splice(idx, 1);\r\n    //   }\r\n    //   this.opcServers$.next(opcServers);\r\n    // }));\r\n    const opcServers = this.opcServers$.getValue();\r\n    const idx = opcServers.findIndex(o => o.id === id);\r\n    if (idx > -1) {\r\n      opcServers.splice(idx, 1);\r\n    }\r\n    this.opcServers$.next(opcServers);\r\n    return of(opcServers);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}